var searchIndex = {};
searchIndex["tvm"] = {"doc":"Binary to drive the `tagua_vm` library.","items":[[5,"process_options","tvm","",null,{"inputs":[{"name":"vec"}],"output":null}]],"paths":[]};
searchIndex["tagua_vm"] = {"doc":"Tagua VM","items":[[0,"language","tagua_vm","Language manipulation (like the lexer, parser, compilerâ€¦).",null,null],[0,"compiler","tagua_vm::language","Collection of AST transformers and property checkers.",null,null],[0,"vm","tagua_vm::language::compiler","Transform an AST to VM intermediate representation.",null,null],[5,"compile","tagua_vm::language::compiler::vm","Compile an AST to VM intermediate representation.",null,{"inputs":[{"name":"addition"}],"output":null}],[0,"parser","tagua_vm::language","Lexical and syntax analyzers, and AST producer.",null,null],[5,"parse","tagua_vm::language::parser","",null,null],[0,"shared","tagua_vm","Small entities shared by many modules.",null,null],[17,"VERSION","tagua_vm::shared","Library version.",null,null]],"paths":[]};
searchIndex["tagua_parser"] = {"doc":"Tagua VM","items":[[5,"parse","tagua_parser","Complete parsing of a datum starting by the sentence symbol of the grammar.",null,null],[0,"internal","","Internal utilities for the parser.",null,null],[4,"Error","tagua_parser::internal","Contains the error that a parser can return",null,null],[13,"Code","","An error code, represented by an ErrorKind, which can contain a custom error code represented by E",0,null],[13,"Node","","An error code, and the next error",0,null],[13,"Position","","An error code, and the input position",0,null],[13,"NodePosition","","An error code, the input position and the next error",0,null],[4,"ErrorKind","","indicates which parser returned an error",null,null],[13,"Custom","","",1,null],[13,"Tag","","",1,null],[13,"MapRes","","",1,null],[13,"MapOpt","","",1,null],[13,"Alt","","",1,null],[13,"IsNot","","",1,null],[13,"IsA","","",1,null],[13,"SeparatedList","","",1,null],[13,"SeparatedNonEmptyList","","",1,null],[13,"Many0","","",1,null],[13,"Many1","","",1,null],[13,"Count","","",1,null],[13,"TakeUntilAndConsume","","",1,null],[13,"TakeUntil","","",1,null],[13,"TakeUntilEitherAndConsume","","",1,null],[13,"TakeUntilEither","","",1,null],[13,"LengthValue","","",1,null],[13,"TagClosure","","",1,null],[13,"Alpha","","",1,null],[13,"Digit","","",1,null],[13,"HexDigit","","",1,null],[13,"OctDigit","","",1,null],[13,"AlphaNumeric","","",1,null],[13,"Space","","",1,null],[13,"MultiSpace","","",1,null],[13,"LengthValueFn","","",1,null],[13,"Eof","","",1,null],[13,"ExprOpt","","",1,null],[13,"ExprRes","","",1,null],[13,"CondReduce","","",1,null],[13,"Switch","","",1,null],[13,"TagBits","","",1,null],[13,"OneOf","","",1,null],[13,"NoneOf","","",1,null],[13,"Char","","",1,null],[13,"CrLf","","",1,null],[13,"RegexpMatch","","",1,null],[13,"RegexpMatches","","",1,null],[13,"RegexpFind","","",1,null],[13,"RegexpCapture","","",1,null],[13,"RegexpCaptures","","",1,null],[13,"TakeWhile1","","",1,null],[13,"Complete","","",1,null],[13,"Fix","","",1,null],[13,"Escaped","","",1,null],[13,"EscapedTransform","","",1,null],[13,"TagStr","","",1,null],[13,"IsNotStr","","",1,null],[13,"IsAStr","","",1,null],[13,"TakeWhile1Str","","",1,null],[13,"NonEmpty","","",1,null],[13,"ManyMN","","",1,null],[13,"TakeUntilAndConsumeStr","","",1,null],[13,"TakeUntilStr","","",1,null],[13,"Not","","",1,null],[4,"Result","","Holds the result of parsing functions",null,null],[13,"Done","","indicates a correct parsing, the first field containing the rest of the unparsed data, the second field contains the parsed data",2,null],[13,"Error","","contains a Err, an enum that can indicate an error code, a position in the input, and a pointer to another error, making a list of errors in the parsing tree",2,null],[13,"Incomplete","","Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown",2,null],[4,"Needed","","Contains information on needed data if a parser returned `Incomplete`",null,null],[13,"Unknown","","needs more data, but we do not know how much",3,null],[13,"Size","","contains the required data size",3,null],[0,"macros","tagua_parser","Extra macros helping to write parsers.",null,null],[4,"ErrorKindCustom","tagua_parser::macros","Custom values for `ErrorKind::Custom`.",null,null],[13,"Exclude","","Represent errors from the `exclude` macro.",4,null],[13,"ITag","","Represent errors from the `itag` macro.",4,null],[0,"ast","tagua_parser","Structures that will constitute the Abstract Syntax Tree.",null,null],[3,"Term","tagua_parser::ast","A term.",null,null],[12,"t","","The term value.",5,null],[3,"Addition","","An addition of two terms.",null,null],[12,"a","","The left-hand side of the addition.",6,null],[12,"b","","The right-hand side of the addition.",6,null],[3,"Variable","","A variable.",null,null],[12,"0","","",7,null],[4,"Literal","","A literal represents a fixed value, aka an atom.",null,null],[13,"Null","","A null value.",8,null],[13,"Boolean","","A boolean, either `true` or `false`.",8,null],[13,"Integer","","An integer, for instance a binary, octal, decimal or hexadecimal number.",8,null],[13,"Real","","A real, for instance an exponential number.",8,null],[13,"String","","A string.",8,null],[4,"Name","","A name represents an entity name.",null,null],[13,"Unqualified","","An unqualified name, i.e. a name without a namespace, like `Bar`.",9,null],[13,"Qualified","","A qualified name, i.e. a name in a relative namespace (aliased or not),\nlike `Foo\\Bar`.",9,null],[13,"RelativeQualified","","A relative qualified name, i.e. a name in a relative namespace\nrestricted to the current namespace, like `namespace\\Foo\\Bar`.",9,null],[13,"FullyQualified","","A fully qualified name, i.e. a name in an absolute namespace, like\n`\\Foo\\Bar`.",9,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"fmt","","",9,null],[0,"rules","tagua_parser","The grammar as a set of rules.",null,null],[5,"root","tagua_parser::rules","",null,null],[0,"comments","","Group of comment rules.",null,null],[5,"comment","tagua_parser::rules::comments","",null,null],[0,"expressions","tagua_parser::rules","Group of expression rules.",null,null],[5,"expr","tagua_parser::rules::expressions","",null,null],[0,"literals","tagua_parser::rules","Group of literal rules.",null,null],[4,"StringError","tagua_parser::rules::literals","String errors.",null,null],[13,"TooShort","","The datum starts as a string but is too short to be a string.",10,null],[13,"InvalidOpeningCharacter","","The string open character is not correct.",10,null],[13,"InvalidClosingCharacter","","The string close character is not correct.",10,null],[13,"InvalidEncoding","","The string is not correctly encoded (expect UTF-8).",10,null],[13,"InvalidDelimiterIdentifier","","The string delimiter identifier is syntactically invalid.",10,null],[5,"literal","","",null,null],[5,"null","","",null,null],[5,"boolean","","",null,null],[5,"integer","","",null,null],[5,"binary","","",null,null],[5,"octal","","",null,null],[5,"decimal","","",null,null],[5,"hexadecimal","","",null,null],[5,"exponential","","",null,null],[5,"string","","",null,null],[0,"skip","tagua_parser::rules","The skip rule.",null,null],[5,"skip","tagua_parser::rules::skip","",null,null],[0,"tokens","tagua_parser::rules","Group of token rules.",null,null],[5,"variable","tagua_parser::rules::tokens","",null,null],[5,"qualified_name","","",null,null],[5,"name","","",null,null],[0,"whitespaces","tagua_parser::rules","Group of white space rules.",null,null],[5,"whitespace","tagua_parser::rules::whitespaces","",null,null],[0,"tokens","tagua_parser","List of lexemes.",null,null],[5,"keywords","tagua_parser::tokens","",null,null],[17,"ABSTRACT","","The `ABSTRACT` token.",null,null],[17,"ADD","","The `ADD` token.",null,null],[17,"ADD_AND_ASSIGN","","The `ADD_AND_ASSIGN` token.",null,null],[17,"AND","","The `AND` token.",null,null],[17,"ARRAY","","The `ARRAY` token.",null,null],[17,"AS","","The `AS` token.",null,null],[17,"ASSIGN","","The `ASSIGN` token.",null,null],[17,"BITWISE_AND","","The `BITWISE_AND` token.",null,null],[17,"BITWISE_AND_AND_ASSIGN","","The `BITWISE_AND_AND_ASSIGN` token.",null,null],[17,"BITWISE_LEFT_SHIFT","","The `BITWISE_LEFT_SHIFT` token.",null,null],[17,"BITWISE_LEFT_SHIFT_AND_ASSIGN","","The `BITWISE_LEFT_SHIFT_AND_ASSIGN` token.",null,null],[17,"BITWISE_NOT","","The `BITWISE_NOT` token.",null,null],[17,"BITWISE_OR","","The `BITWISE_OR` token.",null,null],[17,"BITWISE_OR_AND_ASSIGN","","The `BITWISE_OR_AND_ASSIGN` token.",null,null],[17,"BITWISE_RIGHT_SHIFT","","The `BITWISE_RIGHT_SHIFT` token.",null,null],[17,"BITWISE_RIGHT_SHIFT_AND_ASSIGN","","The `BITWISE_RIGHT_SHIFT_AND_ASSIGN` token.",null,null],[17,"BITWISE_XOR","","The `BITWISE_XOR` token.",null,null],[17,"BITWISE_XOR_AND_ASSIGN","","The `BITWISE_XOR_AND_ASSIGN` token.",null,null],[17,"BOOLEAN_AND","","The `BOOLEAN_AND` token.",null,null],[17,"BOOLEAN_NOT","","The `NOT` token.",null,null],[17,"BOOLEAN_OR","","The `BOOLEAN_OR` token.",null,null],[17,"BREAK","","The `BREAK` token.",null,null],[17,"CALLABLE","","The `CALLABLE` token.",null,null],[17,"CASE","","The `CASE` token.",null,null],[17,"CATCH","","The `CATCH` token.",null,null],[17,"CLASS","","The `CLASS` token.",null,null],[17,"CLONE","","The `CLONE` token.",null,null],[17,"COALESCE","","The `COALESCE` token.",null,null],[17,"COMMA","","The `COMMA` token.",null,null],[17,"COMPARE","","The `COMPARE` token.",null,null],[17,"CONCATENATE","","The `CONCATENATE` token.",null,null],[17,"CONCATENATE_AND_ASSIGN","","The `CONCATENATE_AND_ASSIGN` token.",null,null],[17,"CONST","","The `CONST` token.",null,null],[17,"CONTINUE","","The `CONTINUE` token.",null,null],[17,"DECLARE","","The `DECLARE` token.",null,null],[17,"DECREMENT","","The `DECREMENT` token.",null,null],[17,"DEFAULT","","The `DEFAULT` token.",null,null],[17,"DIE","","The `DIE` token.",null,null],[17,"DIVIDE","","The `DIVIDE` token.",null,null],[17,"DIVIDE_AND_ASSIGN","","The `DIVIDE_AND_ASSIGN` token.",null,null],[17,"DO","","The `DO` token.",null,null],[17,"DYNAMIC_CALL","","The `DYNAMIC_CALL` token.",null,null],[17,"ECHO","","The `ECHO` token.",null,null],[17,"ELLIPSIS","","The `ELLIPSIS` token.",null,null],[17,"ELSE","","The `ELSE` token.",null,null],[17,"ELSEIF","","The `ELSEIF` token.",null,null],[17,"EMPTY","","The `EMPTY` token.",null,null],[17,"ENDDECLARE","","The `ENDDECLARE` token.",null,null],[17,"ENDFOR","","The `ENDFOR` token.",null,null],[17,"ENDFOREACH","","The `ENDFOREACH` token.",null,null],[17,"ENDIF","","The `ENDIF` token.",null,null],[17,"ENDSWITCH","","The `ENDSWITCH` token.",null,null],[17,"ENDWHILE","","The `ENDWHILE` token.",null,null],[17,"EQUAL","","The `EQUAL` token.",null,null],[17,"EVAL","","The `EVAL` token.",null,null],[17,"EXIT","","The `EXIT` token.",null,null],[17,"EXTENDS","","The `EXTENDS` token.",null,null],[17,"FINAL","","The `FINAL` token.",null,null],[17,"FINALLY","","The `FINALLY` token.",null,null],[17,"FOR","","The `FOR` token.",null,null],[17,"FOREACH","","The `FOREACH` token.",null,null],[17,"FUNCTION","","The `FUNCTION` token.",null,null],[17,"FUNCTION_OUTPUT","","The `FUNCTION_OUTPUT` token.",null,null],[17,"GLOBAL","","The `GLOBAL` token.",null,null],[17,"GOTO","","The `GOTO` token.",null,null],[17,"GREATER_THAN","","The `GREATER_THAN` token.",null,null],[17,"GREATER_THAN_OR_EQUAL_TO","","The `GREATER_THAN_OR_EQUAL_TO` token.",null,null],[17,"IDENTICAL","","The `IDENTICAL` token.",null,null],[17,"IF","","The `IF` token.",null,null],[17,"IMPLEMENTS","","The `IMPLEMENTS` token.",null,null],[17,"INCLUDE","","The `INCLUDE` token.",null,null],[17,"INCLUDE_ONCE","","The `INCLUDE_ONCE` token.",null,null],[17,"INCREMENT","","The `INCREMENT` token.",null,null],[17,"INSTANCEOF","","The `INSTANCEOF` token.",null,null],[17,"INSTEADOF","","The `INSTEADOF` token.",null,null],[17,"INTERFACE","","The `INTERFACE` token.",null,null],[17,"ISSET","","The `ISSET` token.",null,null],[17,"LEFT_CURLY_BRACKET","","The `LEFT_CURLY_BRACKET` token.",null,null],[17,"LEFT_PARENTHESIS","","The `LEFT_PARENTHESIS` token.",null,null],[17,"LEFT_SQUARE_BRACKET","","The `LEFT_SQUARE_BRACKET` token.",null,null],[17,"LESS_THAN","","The `LESS_THAN` token.",null,null],[17,"LESS_THAN_OR_EQUAL_TO","","The `LESS_THAN_OR_EQUAL_TO` token.",null,null],[17,"LIST","","The `LIST` token.",null,null],[17,"MODULO","","The `MODULO` token.",null,null],[17,"MODULO_AND_ASSIGN","","The `MODULO_AND_ASSIGN` token.",null,null],[17,"MULTIPLY","","The `MULTIPLY` token.",null,null],[17,"MULTIPLY_AND_ASSIGN","","The `MULTIPLY_AND_ASSIGN` token.",null,null],[17,"NAMESPACE","","The `NAMESPACE` token.",null,null],[17,"NAMESPACE_SEPARATOR","","The `NAMESPACE_SEPARATOR` token.",null,null],[17,"NEW","","The `NEW` token.",null,null],[17,"NOT_EQUAL","","The `NOT_EQUAL` token.",null,null],[17,"NOT_IDENTICAL","","The `NOT_IDENTICAL` token.",null,null],[17,"NULLABLE","","The `NULLABLE` token.",null,null],[17,"OR","","The `OR` token.",null,null],[17,"POW","","The `POW` token.",null,null],[17,"POW_AND_ASSIGN","","The `POW_AND_ASSIGN` token.",null,null],[17,"PRINT","","The `PRINT` token.",null,null],[17,"PRIVATE","","The `PRIVATE` token.",null,null],[17,"PROTECTED","","The `PROTECTED` token.",null,null],[17,"PUBLIC","","The `PUBLIC` token.",null,null],[17,"REFERENCE","","The `REFERENCE` token.",null,null],[17,"REQUIRE","","The `REQUIRE` token.",null,null],[17,"REQUIRE_ONCE","","The `REQUIRE_ONCE` token.",null,null],[17,"RETURN","","The `RETURN` token.",null,null],[17,"RIGHT_CURLY_BRACKET","","The `RIGHT_CURLY_BRACKET` token.",null,null],[17,"RIGHT_PARENTHESIS","","The `RIGHT_PARENTHESIS` token.",null,null],[17,"RIGHT_SQUARE_BRACKET","","The `RIGHT_SQUARE_BRACKET` token.",null,null],[17,"SEMICOLON","","The `SEMICOLON` token.",null,null],[17,"STATIC","","The `STATIC` token.",null,null],[17,"STATIC_CALL","","The `STATIC_CALL` token.",null,null],[17,"SUBTRACT","","The `SUBTRACT` token.",null,null],[17,"SUBTRACT_AND_ASSIGN","","The `SUBTRACT_AND_ASSIGN` token.",null,null],[17,"SWITCH","","The `SWITCH` token.",null,null],[17,"TERNARY_ELSE","","The `TERNARY_ELSE` token.",null,null],[17,"TERNARY_THEN","","The `TERNARY_THEN` token.",null,null],[17,"THROW","","The `THROW` token.",null,null],[17,"TRAIT","","The `TRAIT` token.",null,null],[17,"TRY","","The `TRY` token.",null,null],[17,"UNSET","","The `UNSET` token.",null,null],[17,"USE","","The `USE` token.",null,null],[17,"VAR","","The `VAR` token.",null,null],[17,"VARIABLE","","The `VARIABLE` token.",null,null],[17,"WHILE","","The `WHILE` token.",null,null],[17,"XOR","","The `XOR` token.",null,null],[17,"YIELD","","The `YIELD` token.",null,null],[17,"YIELD_FROM","","The `YIELD_FROM` token.",null,null],[14,"exclude!","tagua_parser","`exclude!(I -&gt; Result&lt;I, O&gt;, I -&gt; Result&lt;I, P&gt;) =&gt; I -&gt; Result&lt;I, 0&gt;`\nreturns the result of the first parser if the second fails. Both parsers\nrun on the same input.",null,null],[14,"first!","","`first!(I -&gt; Result&lt;I, O&gt;) =&gt; I -&gt; Result&lt;I, O&gt;`\nis applying the `skip` rule before the first argument; it allows to skip\ntokens.",null,null],[14,"itag!","","`itag!(&amp;[T]: nom::AsBytes) =&gt; &amp;[T] -&gt; Result&lt;&amp;[T], &amp;[T]&gt;`\ndeclares a case-insensitive ASCII array as a suite to recognize.",null,null],[14,"keyword!","","`keyword!(&amp;[T]: nom::AsBytes) =&gt; &amp;[T] -&gt; Result&lt;&amp;[T], &amp;[T]&gt;`\nis an alias to the `itag` macro.",null,null],[11,"clone","tagua_parser::internal","",1,null],[11,"hash","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"is_known","","",3,null],[11,"map","","Maps a `Needed` to `Needed` by appling a function to a contained `Size` value.",3,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"is_done","","",2,null],[11,"is_err","","",2,null],[11,"is_incomplete","","",2,null],[11,"map","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, N, E&gt;` by appling a function\nto a contained `Done` value, leaving `Error` and `Incomplete` value\nuntouched.",2,null],[11,"map_inc","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, O, E&gt;` by appling a function\nto a contained `Incomplete` value, leaving `Done` and `Error` value\nuntouched.",2,null],[11,"map_err","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, O, N&gt;` by appling a function\nto a contained `Error` value, leaving `Done` and `Incomplete` value\nuntouched.",2,null],[11,"unwrap","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n`Done`.",2,null],[11,"unwrap_inc","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n`Done`.",2,null],[11,"unwrap_err","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n`Done`.",2,null],[11,"remaining_input","","",2,null],[11,"remaining_input","","",2,null],[11,"remaining_input","","",2,null],[11,"output","","",2,null],[11,"output","","",2,null],[11,"output","","",2,null],[11,"description","","",0,null],[11,"fmt","","",0,null]],"paths":[[4,"Error"],[4,"ErrorKind"],[4,"Result"],[4,"Needed"],[4,"ErrorKindCustom"],[3,"Term"],[3,"Addition"],[3,"Variable"],[4,"Literal"],[4,"Name"],[4,"StringError"]]};
searchIndex["nom"] = {"doc":"nom, eating data byte by byte","items":[[3,"ProducerRepeat","nom","ProducerRepeat takes a single value, and generates it at each step",null,null],[3,"MemProducer","","A MemProducer generates values from an in memory byte buffer",null,null],[3,"FileProducer","","",null,null],[3,"MapConsumer","","MapConsumer takes a function S -&gt; T and applies it on a consumer producing values of type S",null,null],[3,"ChainConsumer","","ChainConsumer takes a consumer C1 R -&gt; S, and a consumer C2 S -&gt; T, and makes a consumer R -&gt; T by applying C2 on C1&#39;s result",null,null],[4,"ErrorKind","","indicates which parser returned an error",null,null],[13,"Custom","","",0,null],[13,"Tag","","",0,null],[13,"MapRes","","",0,null],[13,"MapOpt","","",0,null],[13,"Alt","","",0,null],[13,"IsNot","","",0,null],[13,"IsA","","",0,null],[13,"SeparatedList","","",0,null],[13,"SeparatedNonEmptyList","","",0,null],[13,"Many0","","",0,null],[13,"Many1","","",0,null],[13,"Count","","",0,null],[13,"TakeUntilAndConsume","","",0,null],[13,"TakeUntil","","",0,null],[13,"TakeUntilEitherAndConsume","","",0,null],[13,"TakeUntilEither","","",0,null],[13,"LengthValue","","",0,null],[13,"TagClosure","","",0,null],[13,"Alpha","","",0,null],[13,"Digit","","",0,null],[13,"HexDigit","","",0,null],[13,"OctDigit","","",0,null],[13,"AlphaNumeric","","",0,null],[13,"Space","","",0,null],[13,"MultiSpace","","",0,null],[13,"LengthValueFn","","",0,null],[13,"Eof","","",0,null],[13,"ExprOpt","","",0,null],[13,"ExprRes","","",0,null],[13,"CondReduce","","",0,null],[13,"Switch","","",0,null],[13,"TagBits","","",0,null],[13,"OneOf","","",0,null],[13,"NoneOf","","",0,null],[13,"Char","","",0,null],[13,"CrLf","","",0,null],[13,"RegexpMatch","","",0,null],[13,"RegexpMatches","","",0,null],[13,"RegexpFind","","",0,null],[13,"RegexpCapture","","",0,null],[13,"RegexpCaptures","","",0,null],[13,"TakeWhile1","","",0,null],[13,"Complete","","",0,null],[13,"Fix","","",0,null],[13,"Escaped","","",0,null],[13,"EscapedTransform","","",0,null],[13,"TagStr","","",0,null],[13,"IsNotStr","","",0,null],[13,"IsAStr","","",0,null],[13,"TakeWhile1Str","","",0,null],[13,"NonEmpty","","",0,null],[13,"ManyMN","","",0,null],[13,"TakeUntilAndConsumeStr","","",0,null],[13,"TakeUntilStr","","",0,null],[13,"Not","","",0,null],[4,"Err","","Contains the error that a parser can return",null,null],[13,"Code","","An error code, represented by an ErrorKind, which can contain a custom error code represented by E",1,null],[13,"Node","","An error code, and the next error",1,null],[13,"Position","","An error code, and the input position",1,null],[13,"NodePosition","","An error code, the input position and the next error",1,null],[4,"Needed","","Contains information on needed data if a parser returned `Incomplete`",null,null],[13,"Unknown","","needs more data, but we do not know how much",2,null],[13,"Size","","contains the required data size",2,null],[4,"IResult","","Holds the result of parsing functions",null,null],[13,"Done","","indicates a correct parsing, the first field containing the rest of the unparsed data, the second field contains the parsed data",3,null],[13,"Error","","contains a Err, an enum that can indicate an error code, a position in the input, and a pointer to another error, making a list of errors in the parsing tree",3,null],[13,"Incomplete","","Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown",3,null],[4,"Input","","",null,null],[13,"Element","","",4,null],[13,"Empty","","",4,null],[13,"Eof","","",4,null],[4,"ConsumerState","","Stores a consumer&#39;s current computation state",null,null],[13,"Done","","A value of type O has been produced",5,null],[13,"Error","","An error of type E has been encountered",5,null],[13,"Continue","","Continue applying, and pass a message of type M to the data source",5,null],[4,"Move","","",null,null],[13,"Consume","","indcates how much data was consumed",6,null],[13,"Seek","","indicates where in the input the consumer must seek",6,null],[13,"Await","","indicates more data is needed",6,null],[4,"FileProducerState","","",null,null],[13,"Normal","","",7,null],[13,"Error","","",7,null],[13,"Eof","","",7,null],[5,"error_to_list","","",null,{"inputs":[{"name":"err"}],"output":{"name":"vec"}}],[5,"compare_error_paths","","",null,{"inputs":[{"name":"err"},{"name":"err"}],"output":{"name":"bool"}}],[5,"add_error_pattern","","",null,{"inputs":[{"name":"hashmap"},{"name":"iresult"},{"name":"str"}],"output":{"name":"bool"}}],[5,"slice_to_offsets","","",null,null],[5,"prepare_errors","","",null,null],[5,"print_error","","",null,null],[5,"generate_colors","","",null,null],[5,"code_from_offset","","",null,null],[5,"reset_color","","",null,{"inputs":[{"name":"vec"}],"output":null}],[5,"write_color","","",null,{"inputs":[{"name":"vec"},{"name":"u8"}],"output":null}],[5,"print_codes","","",null,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"string"}}],[5,"print_offsets","","",null,null],[5,"error_to_u32","","",null,{"inputs":[{"name":"errorkind"}],"output":{"name":"u32"}}],[5,"tag_cl","","",null,null],[5,"print","","",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"begin","","",null,null],[5,"not_line_ending","","",null,null],[5,"line_ending","","Recognizes a line feed",null,null],[5,"is_alphabetic","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_hex_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_oct_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_alphanumeric","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_space","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"alpha","","Recognizes lowercase and uppercase alphabetic characters: a-zA-Z",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"digit","","Recognizes numerical characters: 0-9",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"hex_digit","","Recognizes hexadecimal numerical characters: 0-9, A-F, a-f",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"oct_digit","","Recognizes octal characters: 0-7",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"alphanumeric","","Recognizes numerical and alphabetic characters: 0-9a-zA-Z",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"space","","Recognizes spaces and tabs",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"multispace","","Recognizes spaces, tabs, carriage returns and line feeds",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"sized_buffer","","",null,null],[5,"length_value","","",null,null],[5,"be_u8","","Recognizes an unsigned 1 byte integer (equivalent to take!(1)",null,null],[5,"be_u16","","Recognizes big endian unsigned 2 bytes integer",null,null],[5,"be_u32","","Recognizes big endian unsigned 4 bytes integer",null,null],[5,"be_u64","","Recognizes big endian unsigned 8 bytes integer",null,null],[5,"be_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",null,null],[5,"be_i16","","Recognizes big endian signed 2 bytes integer",null,null],[5,"be_i32","","Recognizes big endian signed 4 bytes integer",null,null],[5,"be_i64","","Recognizes big endian signed 8 bytes integer",null,null],[5,"le_u8","","Recognizes an unsigned 1 byte integer (equivalent to take!(1)",null,null],[5,"le_u16","","Recognizes little endian unsigned 2 bytes integer",null,null],[5,"le_u32","","Recognizes little endian unsigned 4 bytes integer",null,null],[5,"le_u64","","Recognizes little endian unsigned 8 bytes integer",null,null],[5,"le_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",null,null],[5,"le_i16","","Recognizes little endian signed 2 bytes integer",null,null],[5,"le_i32","","Recognizes little endian signed 4 bytes integer",null,null],[5,"le_i64","","Recognizes little endian signed 8 bytes integer",null,null],[5,"be_f32","","Recognizes big endian 4 bytes floating point number",null,null],[5,"be_f64","","Recognizes big endian 8 bytes floating point number",null,null],[5,"le_f32","","Recognizes little endian 4 bytes floating point number",null,null],[5,"le_f64","","Recognizes little endian 8 bytes floating point number",null,null],[5,"hex_u32","","Recognizes a hex-encoded integer",null,null],[5,"eof","","Recognizes empty input buffers",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"non_empty","","Recognizes non empty buffers",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"rest","","Return the remaining input.",null,null],[5,"rest_s","","Return the remaining input, for strings.",null,{"inputs":[{"name":"str"}],"output":{"name":"iresult"}}],[5,"newline","","",null,null],[5,"crlf","","",null,null],[5,"eol","","",null,null],[5,"tab","","",null,null],[5,"anychar","","",null,null],[5,"shift","","",null,null],[11,"clone","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"is_known","","",2,null],[11,"map","","Maps a `Needed` to `Needed` by appling a function to a contained `Size` value.",2,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"is_done","","",3,null],[11,"is_err","","",3,null],[11,"is_incomplete","","",3,null],[11,"map","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, N, E&gt;` by appling a function\nto a contained `Done` value, leaving `Error` and `Incomplete` value\nuntouched.",3,null],[11,"map_inc","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, O, E&gt;` by appling a function\nto a contained `Incomplete` value, leaving `Done` and `Error` value\nuntouched.",3,null],[11,"map_err","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, O, N&gt;` by appling a function\nto a contained `Error` value, leaving `Done` and `Incomplete` value\nuntouched.",3,null],[11,"unwrap","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n`Done`.",3,null],[11,"unwrap_inc","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n`Done`.",3,null],[11,"unwrap_err","","Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n`Done`.",3,null],[11,"remaining_input","","",3,null],[11,"remaining_input","","",3,null],[11,"remaining_input","","",3,null],[11,"output","","",3,null],[11,"output","","",3,null],[11,"output","","",3,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"map","","",5,null],[11,"flat_map","","",5,null],[11,"apply","","",8,null],[11,"new","","",9,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"apply","","",9,null],[11,"eq","","",7,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",10,null],[11,"new","","",10,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"state","","",10,null],[11,"refill","","",10,null],[11,"resize","","Resize the internal buffer, copy the data to the new one and returned how much data was copied",10,null],[11,"apply","","",10,null],[11,"new","","",11,{"inputs":[{"name":"c"},{"name":"f"}],"output":{"name":"mapconsumer"}}],[11,"handle","","",11,null],[11,"state","","",11,null],[11,"new","","",12,{"inputs":[{"name":"c1"},{"name":"c2"}],"output":{"name":"chainconsumer"}}],[11,"handle","","",12,null],[11,"state","","",12,null],[8,"HexDisplay","","useful functions to calculate the offset between slices and show a hexdump of a slice",null,null],[10,"offset","","offset between the first byte of self and the first byte of the argument",13,null],[10,"to_hex","","Converts the value of `self` to a hex dump, returning the owned\nstring.",13,null],[10,"to_hex_from","","Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\nstring.",13,null],[8,"InputLength","","",null,null],[10,"input_len","","",14,null],[8,"AsChar","","",null,null],[10,"as_char","","",15,null],[10,"is_alpha","","",15,null],[10,"is_alphanum","","",15,null],[10,"is_0_to_9","","",15,null],[10,"is_hex_digit","","",15,null],[10,"is_oct_digit","","",15,null],[8,"IterIndices","","",null,null],[16,"Item","","",16,null],[16,"Iter","","",16,null],[10,"iter_indices","","",16,null],[8,"AsBytes","","",null,null],[10,"as_bytes","","",17,null],[8,"GetInput","","",null,null],[10,"remaining_input","","",18,null],[8,"GetOutput","","",null,null],[10,"output","","",19,null],[8,"Consumer","","The Consumer trait wraps a computation and its state",null,null],[10,"handle","","implement handle for the current computation, returning the new state of the consumer",20,null],[10,"state","","returns the current state",20,null],[8,"Producer","","The producer wraps a data source, like file or network, and applies a consumer on it",null,null],[10,"apply","","Applies a consumer once on the produced data, and return the consumer&#39;s state",21,null],[11,"run","","Applies a consumer once on the produced data, and returns the generated value if there is one",21,null],[14,"dbg!","","Prints a message if the parser fails",null,null],[14,"dbg_dmp!","","Prints a message and the input if the parser fails",null,null],[14,"closure!","","Wraps a parser in a closure",null,null],[14,"named!","","Makes a function from a parser combination",null,null],[14,"call!","","Used to wrap common expressions and function as macros",null,null],[14,"apply!","","emulate function currying: `apply!(my_function, arg1, arg2, ...)` becomes `my_function(input, arg1, arg2, ...)`",null,null],[14,"error!","","Prevents backtracking if the child parser fails",null,null],[14,"add_error!","","Add an error if the child parser fails",null,null],[14,"fix_error!","","translate parser result from IResult&lt;I,O,u32&gt; to IResult&lt;I,O,E&gt; with a custom type",null,null],[14,"complete!","","replaces a `Incomplete` returned by the child parser\nwith an `Error`",null,null],[14,"try_parse!","","A bit like `std::try!`, this macro will return the remaining input and parsed value if the child parser returned `Done`,\nand will do an early return for `Error` and `Incomplete`\nthis can provide more flexibility than `chain!` if needed",null,null],[14,"flat_map!","","`flat_map!(R -&gt; IResult&lt;R,S&gt;, S -&gt; IResult&lt;S,T&gt;) =&gt; R -&gt; IResult&lt;R, T&gt;`",null,null],[14,"map!","","`map!(I -&gt; IResult&lt;I,O&gt;, O -&gt; P) =&gt; I -&gt; IResult&lt;I, P&gt;`\nmaps a function on the result of a parser",null,null],[14,"map_res!","","`map_res!(I -&gt; IResult&lt;I,O&gt;, O -&gt; Result&lt;P&gt;) =&gt; I -&gt; IResult&lt;I, P&gt;`\nmaps a function returning a Result on the output of a parser",null,null],[14,"map_opt!","","`map_opt!(I -&gt; IResult&lt;I,O&gt;, O -&gt; Option&lt;P&gt;) =&gt; I -&gt; IResult&lt;I, P&gt;`\nmaps a function returning an Option on the output of a parser",null,null],[14,"value!","","`value!(T, R -&gt; IResult&lt;R, S&gt; ) =&gt; R -&gt; IResult&lt;R, T&gt;`",null,null],[14,"expr_res!","","`expr_res!(Result&lt;E,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nevaluate an expression that returns a Result&lt;T,E&gt; and returns a IResult::Done(I,T) if Ok",null,null],[14,"expr_opt!","","`expr_opt!(Option&lt;O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nevaluate an expression that returns a Option&lt;T&gt; and returns a IResult::Done(I,T) if Some",null,null],[14,"chain!","","`chain!(I-&gt;IResult&lt;I,A&gt; ~ I-&gt;IResult&lt;I,B&gt; ~ ... I-&gt;IResult&lt;I,X&gt; , || { return O } ) =&gt; I -&gt; IResult&lt;I, O&gt;`\nchains parsers and assemble the results through a closure",null,null],[14,"tuple!","","`tuple!(I-&gt;IResult&lt;I,A&gt;, I-&gt;IResult&lt;I,B&gt;, ... I-&gt;IResult&lt;I,X&gt;) =&gt; I -&gt; IResult&lt;I, (A, B, ..., X)&gt;`\nchains parsers and assemble the sub results in a tuple.",null,null],[14,"alt!","","`alt!(I -&gt; IResult&lt;I,O&gt; | I -&gt; IResult&lt;I,O&gt; | ... | I -&gt; IResult&lt;I,O&gt; ) =&gt; I -&gt; IResult&lt;I, O&gt;`\ntry a list of parsers, return the result of the first successful one",null,null],[14,"alt_complete!","","This is a combination of the `alt!` and `complete!` combinators. Rather\nthan returning `Incomplete` on partial input, `alt_complete!` will try the\nnext alternative in the chain. You should use this only if you know you\nwill not receive partial input for the rules you&#39;re trying to match (this\nis almost always the case for parsing programming languages).",null,null],[14,"switch!","","`switch!(I -&gt; IResult&lt;I,P&gt;, P =&gt; I -&gt; IResult&lt;I,O&gt; | ... | P =&gt; I -&gt; IResult&lt;I,O&gt; ) =&gt; I -&gt; IResult&lt;I, O&gt;`\nchoose the next parser depending on the result of the first one, if successful,\nand returns the result of the second parser",null,null],[14,"opt!","","`opt!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Option&lt;O&gt;&gt;`\nmake the underlying parser optional",null,null],[14,"opt_res!","","`opt_res!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Result&lt;nom::Err,O&gt;&gt;`\nmake the underlying parser optional",null,null],[14,"cond_with_error!","","`cond_with_error!(bool, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Option&lt;O&gt;&gt;`\nConditional combinator",null,null],[14,"cond!","","`cond!(bool, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Option&lt;O&gt;&gt;`\nConditional combinator",null,null],[14,"cond_reduce!","","`cond_reduce!(bool, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nConditional combinator with error",null,null],[14,"peek!","","`peek!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nreturns a result without consuming the input",null,null],[14,"not!","","`not!(I -&gt; IResult&lt;I,0&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nreturns a result only if the embedded parser returns Error or Incomplete\ndoes not consume the input",null,null],[14,"tap!","","`tap!(name: I -&gt; IResult&lt;I,O&gt; =&gt; { block }) =&gt; I -&gt; IResult&lt;I, O&gt;`\nallows access to the parser&#39;s result without affecting it",null,null],[14,"pair!","","`pair!(I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I,P&gt;) =&gt; I -&gt; IResult&lt;I, (O,P)&gt;`\npair(X,Y), returns (x,y)",null,null],[14,"separated_pair!","","`separated_pair!(I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I, T&gt;, I -&gt; IResult&lt;I,P&gt;) =&gt; I -&gt; IResult&lt;I, (O,P)&gt;`\nseparated_pair(X,sep,Y) returns (x,y)",null,null],[14,"preceded!","","`preceded!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\npreceded(opening, X) returns X",null,null],[14,"terminated!","","`terminated!(I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I,T&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nterminated(X, closing) returns X",null,null],[14,"delimited!","","`delimited!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I,U&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\ndelimited(opening, X, closing) returns X",null,null],[14,"separated_list!","","`separated_list!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nseparated_list(sep, X) returns Vec&lt;X&gt;",null,null],[14,"separated_nonempty_list!","","`separated_nonempty_list!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nseparated_nonempty_list(sep, X) returns Vec&lt;X&gt;",null,null],[14,"many0!","","`many0!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the parser 0 or more times and returns the list of results in a Vec",null,null],[14,"many1!","","`many1!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the parser 1 or more times and returns the list of results in a Vec",null,null],[14,"many_m_n!","","`many_m_n!(usize, usize, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the parser between m and n times (n included) and returns the list of results in a Vec",null,null],[14,"count!","","`count!(I -&gt; IResult&lt;I,O&gt;, nb) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the child parser a specified number of times",null,null],[14,"count_fixed!","","`count_fixed!(O, I -&gt; IResult&lt;I,O&gt;, nb) =&gt; I -&gt; IResult&lt;I, [O; nb]&gt;`\nApplies the child parser a fixed number of times and returns a fixed size array\nThe type must be specified and it must be `Copy`",null,null],[14,"length_value!","","`length_value!(I -&gt; IResult&lt;I, nb&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\ngets a number from the first parser, then applies the second parser that many times",null,null],[14,"fold_many0!","","`fold_many0!(I -&gt; IResult&lt;I,O&gt;, R, Fn(R, O) -&gt; R) =&gt; I -&gt; IResult&lt;I, R&gt;`\nApplies the parser 0 or more times and folds the list of return values",null,null],[14,"fold_many1!","","`fold_many1!(I -&gt; IResult&lt;I,O&gt;, R, Fn(R, O) -&gt; R) =&gt; I -&gt; IResult&lt;I, R&gt;`\nApplies the parser 1 or more times and folds the list of return values",null,null],[14,"fold_many_m_n!","","`fold_many_m_n!(usize, usize, I -&gt; IResult&lt;I,O&gt;, R, Fn(R, O) -&gt; R) =&gt; I -&gt; IResult&lt;I, R&gt;`\nApplies the parser between m and n times (n included) and folds the list of return value",null,null],[14,"method!","","Makes a method from a parser combination",null,null],[14,"call_m!","","Used to called methods then move self back into self",null,null],[14,"apply_m!","","emulate function currying for method calls on structs\n`apply!(self.my_function, arg1, arg2, ...)` becomes `self.my_function(input, arg1, arg2, ...)`",null,null],[14,"recognize!","","`recognize!(&amp;[T] -&gt; IResult&lt;&amp;[T], O&gt; ) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nif the child parser was successful, return the consumed input as produced value",null,null],[14,"tag!","","`tag!(&amp;[T]: nom::AsBytes) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\ndeclares a byte array as a suite to recognize",null,null],[14,"is_not!","","`is_not!(&amp;[T:AsBytes]) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes that do not appear in the provided array",null,null],[14,"is_a!","","`is_a!(&amp;[T]) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes that appear in the provided array",null,null],[14,"escaped!","","`escaped!(&amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;, T, &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nmatches a byte string with escaped characters.",null,null],[14,"escaped_transform!","","`escaped_transform!(&amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;, T, &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;T&gt;&gt;`\nmatches a byte string with escaped characters.",null,null],[14,"take_while!","","`take_while!(T -&gt; bool) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes until the provided function fails.",null,null],[14,"take_while1!","","`take_while1!(&amp;[T] -&gt; bool) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest (non empty) list of bytes until the provided function fails.",null,null],[14,"take_till!","","`take_till!(T -&gt; bool) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes until the provided function succeeds",null,null],[14,"take!","","`take!(nb) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\ngenerates a parser consuming the specified number of bytes",null,null],[14,"take_str!","","`take!(nb) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;str&gt;`\nsame as take! but returning a &amp;str",null,null],[14,"take_until_and_consume!","","`take_until_and_consume!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\ngenerates a parser consuming bytes until the specified byte sequence is found, and consumes it",null,null],[14,"take_until!","","`take_until!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nconsumes data until it finds the specified tag",null,null],[14,"take_until_either_and_consume!","","`take_until_either_and_consume!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nconsumes data until it finds any of the specified characters, and consume it",null,null],[14,"take_until_either!","","`take_until_either!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`",null,null],[14,"length_bytes!","","`length_bytes!(&amp;[T] -&gt; IResult&lt;&amp;[T], nb&gt;) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;\ngets a number from the first parser, then extracts that many bytes from the\nremaining stream",null,null],[14,"bits!","","`bits!( parser ) =&gt; ( &amp;[u8], (&amp;[u8], usize) -&gt; IResult&lt;(&amp;[u8], usize), T&gt; ) -&gt; IResult&lt;&amp;[u8], T&gt;`\ntransforms its byte slice input into a bit stream for the underlying parsers",null,null],[14,"take_bits!","","`take_bits!(type, nb) =&gt; ( (&amp;[T], usize), U, usize) -&gt; IResult&lt;(&amp;[T], usize), U&gt;`\ngenerates a parser consuming the specified number of bits.",null,null],[14,"tag_bits!","","matches an integer pattern to a bitstream. The number of bits of the input to compare must be specified",null,null],[14,"u16!","","if parameter is true, parse a big endian u16 integer,\notherwise a little endian u16 integer",null,null],[14,"u32!","","if parameter is true, parse a big endian u32 integer,\notherwise a little endian u32 integer",null,null],[14,"u64!","","if parameter is true, parse a big endian u64 integer,\notherwise a little endian u64 integer",null,null],[14,"i16!","","if parameter is true, parse a big endian i16 integer,\notherwise a little endian i16 integer",null,null],[14,"i32!","","if parameter is true, parse a big endian i32 integer,\notherwise a little endian i32 integer",null,null],[14,"i64!","","if parameter is true, parse a big endian i64 integer,\notherwise a little endian i64 integer",null,null],[14,"one_of!","","matches one of the provided characters",null,null],[14,"none_of!","","matches anything but the provided characters",null,null],[14,"char!","","matches one character: `char!(char) =&gt; &amp;[u8] -&gt; IResult&lt;&amp;[u8], char&gt;",null,null],[14,"re_match!","","`re_match!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nReturns the whole input if a match is found",null,null],[14,"re_match_static!","","`re_match_static!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nReturns the whole input if a match is found. Regular expression calculated at compile time",null,null],[14,"re_bytes_match!","","`re_bytes_match!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nReturns the whole input if a match is found",null,null],[14,"re_bytes_match_static!","","`re_bytes_match_static!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nReturns the whole input if a match is found. Regular expression calculated at compile time",null,null],[14,"re_find!","","`re_find!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nReturns the first match",null,null],[14,"re_find_static!","","`re_find_static!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nReturns the first match. Regular expression calculated at compile time",null,null],[14,"re_bytes_find!","","`re_bytes_find!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nReturns the first match",null,null],[14,"re_bytes_find_static!","","`re_bytes_find!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nReturns the first match. Regular expression calculated at compile time",null,null],[14,"re_matches!","","`re_matches!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;&amp;[T]&gt;&gt;`\nReturns all the matched parts",null,null],[14,"re_matches_static!","","`re_matches_static!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;&amp;[T]&gt;&gt;`\nReturns all the matched parts. Regular expression calculated at compile time",null,null],[14,"re_bytes_matches!","","`re_bytes_matches!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;&amp;[T]&gt;&gt;`\nReturns all the matched parts",null,null],[14,"re_bytes_matches_static!","","`re_bytes_matches_static!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;&amp;[T]&gt;&gt;`\nReturns all the matched parts. Regular expression calculated at compile time",null,null],[14,"re_capture!","","`re_capture!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;&amp;[T]&gt;&gt;`\nReturns the first capture group",null,null],[14,"re_capture_static!","","`re_capture_static!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;&amp;[T]&gt;&gt;`\nReturns the first capture group. Regular expression calculated at compile time",null,null],[14,"re_bytes_capture!","","`re_bytes_capture!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;&amp;[T]&gt;&gt;`\nReturns the first capture group",null,null],[14,"re_bytes_capture_static!","","`re_bytes_capture_static!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;&amp;[T]&gt;&gt;`\nReturns the first capture group. Regular expression calculated at compile time",null,null],[14,"re_captures!","","`re_captures!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;Vec&lt;&amp;[T]&gt;&gt;&gt;`\nReturns all the capture groups",null,null],[14,"re_captures_static!","","`re_captures_static!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;Vec&lt;&amp;[T]&gt;&gt;&gt;`\nReturns all the capture groups. Regular expression calculated at compile time",null,null],[14,"re_bytes_captures!","","`re_bytes_captures!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;Vec&lt;&amp;[T]&gt;&gt;&gt;`\nReturns all the capture groups",null,null],[14,"re_bytes_captures_static!","","`re_bytes_captures_static!(regexp) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;Vec&lt;&amp;[T]&gt;&gt;&gt;`\nReturns all the capture groups. Regular expression calculated at compile time",null,null],[14,"consumer_from_parser!","","",null,null],[14,"tag_s!","","`tag_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ndeclares a string as a suite to recognize",null,null],[14,"take_s!","","`take_s!(nb) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ngenerates a parser consuming the specified number of characters",null,null],[14,"is_not_s!","","`is_not_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters that do not appear in the provided array",null,null],[14,"is_a_s!","","`is_a_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters that appear in the provided array",null,null],[14,"take_while_s!","","`take_while_s!(char -&gt; bool) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters until the provided function fails.",null,null],[14,"take_while1_s!","","`take_while1_s!(char -&gt; bool) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest (non empty) list of characters until the provided function fails.",null,null],[14,"take_till_s!","","`take_till_s!(&amp;str -&gt; bool) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters until the provided function succeeds",null,null],[14,"take_until_and_consume_s!","","`take_until_and_consume_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ngenerates a parser consuming all chars until the specified string is found and consumes it",null,null],[14,"take_until_s!","","`take_until_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ngenerates a parser consuming all chars until the specified string is found and leaves it in the remaining input",null,null],[11,"run","","Applies a consumer once on the produced data, and returns the generated value if there is one",21,null]],"paths":[[4,"ErrorKind"],[4,"Err"],[4,"Needed"],[4,"IResult"],[4,"Input"],[4,"ConsumerState"],[4,"Move"],[4,"FileProducerState"],[3,"ProducerRepeat"],[3,"MemProducer"],[3,"FileProducer"],[3,"MapConsumer"],[3,"ChainConsumer"],[8,"HexDisplay"],[8,"InputLength"],[8,"AsChar"],[8,"IterIndices"],[8,"AsBytes"],[8,"GetInput"],[8,"GetOutput"],[8,"Consumer"],[8,"Producer"]]};
searchIndex["regex"] = {"doc":"This crate provides a native implementation of regular expressions that is\nheavily based on RE2 both in syntax and in implementation. Notably,\nbackreferences and arbitrary lookahead/lookbehind assertions are not\nprovided. In return, regular expression searching provided by this package\nhas excellent worst-case performance. The specific syntax supported is\ndocumented further down.","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"Captures","","Captures represents a group of captured strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group\nname and the value.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"NoExpand","","NoExpand indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"RegexSplits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[4,"Error","","An error that occurred during parsing or compiling a regular expression.",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit.\nThe argument is the size limit imposed.",1,null],[13,"InvalidSet","","**DEPRECATED:** Will be removed on next major version bump.",1,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"is_match","","Tests if the given regular expression matches somewhere in the text given.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.",null,null],[3,"Splits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group name and\nthe value.",null,null],[3,"NoExpand","","NoExpand indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a byte\nstring.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,null],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,null],[11,"fmt","regex","",1,null],[11,"description","","",1,null],[11,"cause","","",1,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",4,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"compile","","Consume the builder and compile the regular expression.",4,null],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,null],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,null],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).",4,null],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,null],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,null],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,null],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",4,null],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,null],[11,"new","regex","Create a new regular expression builder with the given pattern.",5,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"compile","","Consume the builder and compile the regular expression.",5,null],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,null],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,null],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).",5,null],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,null],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,null],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,null],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",5,null],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,null],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,null],[11,"clone","","",6,null],[11,"fmt","","Shows the original regular expression.",6,null],[11,"fmt","","Shows the original regular expression.",6,null],[11,"from_str","","Attempts to parse a string into a regular expression",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",6,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",6,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",6,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",6,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",6,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about submatches.",6,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn&#39;t* matched by the regular expression.",6,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn&#39;t* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.",6,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The\nreplacement can be a regular byte string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches&#39;\n`Captures` and returns the replaced byte string.",6,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.",6,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",6,null],[11,"shortest_match","","Returns the end location of a match in the text given.",6,null],[11,"as_str","","Returns the original string of this regex.",6,null],[11,"capture_names","","Returns an iterator over the capture names.",6,null],[11,"captures_len","","Returns the number of captures.",6,null],[11,"next","","",7,null],[11,"next","","",8,null],[11,"next","","",9,null],[11,"next","","",10,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original byte string matched.",12,null],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn&#39;t\na valid capture group or didn&#39;t match anything, then `None` is\nreturned.",12,null],[11,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn&#39;t a valid capture group or didn&#39;t match anything, then\n`None` is returned.",12,null],[11,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",12,null],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",12,null],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group\nname and the value. The iterator returns these values in arbitrary\norder.",12,null],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`, and writes them to the `dst` buffer given.",12,null],[11,"len","","Returns the number of captured groups.",12,null],[11,"is_empty","","Returns true if and only if there are no captured groups.",12,null],[11,"fmt","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"next","","",13,null],[11,"next","","",14,null],[11,"next","","",15,null],[11,"replace_append","","",2,null],[11,"no_expansion","","",2,null],[11,"clone","regex","",16,null],[11,"new","","Create a new regex set with the given regular expressions.",16,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches\nthe text given.",16,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",16,null],[11,"len","","Returns the total number of regular expressions in this set.",16,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"matched_any","","Whether this set contains any matches.",17,null],[11,"matched","","Whether the regex at the given index matched.",17,null],[11,"len","","The total number of regexes in the set that created these matches.",17,null],[11,"iter","","Returns an iterator over indexes in the regex that matched.",17,null],[11,"into_iter","","",17,null],[11,"next","","",18,null],[11,"next_back","","",18,null],[11,"clone","","",19,null],[11,"next","","",19,null],[11,"next_back","","",19,null],[11,"fmt","","",16,null],[11,"clone","regex::bytes","",20,null],[11,"new","","Create a new regex set with the given regular expressions.",20,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches\nthe text given.",20,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",20,null],[11,"len","","Returns the total number of regular expressions in this set.",20,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"matched_any","","Whether this set contains any matches.",21,null],[11,"matched","","Whether the regex at the given index matched.",21,null],[11,"len","","The total number of regexes in the set that created these matches.",21,null],[11,"iter","","Returns an iterator over indexes in the regex that matched.",21,null],[11,"into_iter","","",21,null],[11,"next","","",22,null],[11,"next_back","","",22,null],[11,"clone","","",23,null],[11,"next","","",23,null],[11,"next_back","","",23,null],[11,"fmt","","",20,null],[11,"clone","regex","",24,null],[11,"fmt","","Shows the original regular expression.",24,null],[11,"fmt","","Shows the original regular expression.",24,null],[11,"eq","","",24,null],[11,"from_str","","Attempts to parse a string into a regular expression",24,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.",24,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",24,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",24,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",24,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",24,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",24,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about submatches.",24,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn&#39;t* matched by the regular expression.",24,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn&#39;t* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.",24,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches&#39;\n`Captures` and returns the replaced string.",24,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.",24,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",24,null],[11,"shortest_match","","Returns the end location of a match in the text given.",24,null],[11,"as_str","","Returns the original string of this regex.",24,null],[11,"capture_names","","Returns an iterator over the capture names.",24,null],[11,"captures_len","","Returns the number of captures.",24,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"reg_replace","","",0,null],[11,"no_expand","","",0,null],[11,"next","","",26,null],[11,"next","","",27,null],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.",28,null],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn&#39;t\na valid capture group or didn&#39;t match anything, then `None` is\nreturned.",28,null],[11,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn&#39;t a valid capture group or didn&#39;t match anything, then\n`None` is returned.",28,null],[11,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",28,null],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",28,null],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group\nname and the value. The iterator returns these values in arbitrary\norder.",28,null],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`.",28,null],[11,"len","","Returns the number of captured groups.",28,null],[11,"is_empty","","Returns true if and only if there are no captured groups.",28,null],[11,"fmt","","",28,null],[11,"index","","",28,null],[11,"index","","",28,null],[11,"next","","",29,null],[11,"next","","",30,null],[11,"next","","",31,null],[11,"next","","",32,null],[11,"next","","",33,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a string.",null,null],[10,"reg_replace","","Returns a possibly owned string that is used to replace the match\ncorresponding to the `caps` capture group.",34,null],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",34,null],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",34,null]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"Regex"],[3,"FindMatches"],[3,"FindCaptures"],[3,"Splits"],[3,"SplitsN"],[3,"CaptureNames"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Regex"],[3,"CaptureNames"],[3,"RegexSplits"],[3,"RegexSplitsN"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"FindCaptures"],[3,"FindMatches"],[8,"Replacer"]]};
searchIndex["aho_corasick"] = {"doc":"An implementation of the\n[Aho-Corasick string search algorithm](https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_string_matching_algorithm).","items":[[3,"Match","aho_corasick","Records a match in the search text.",null,null],[12,"pati","","The pattern index.",0,null],[12,"start","","The starting byte offset of the match in the search text.",0,null],[12,"end","","The ending byte offset of the match in the search text.",0,null],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",null,null],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",null,null],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",null,null],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",null,null],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",null,null],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",null,null],[3,"Dense","","State transitions that can be stored either sparsely or densely.",null,null],[3,"Sparse","","State transitions that are always sparse.",null,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",1,null],[11,"next","","",1,null],[11,"fmt","","",2,null],[11,"next","","",2,null],[11,"fmt","","",3,null],[11,"next","","",3,null],[11,"fmt","","",4,null],[11,"next","","",4,null],[11,"clone","","",5,null],[11,"new","","Build a new expanded Aho-Corasick automaton from an existing\nAho-Corasick automaton.",5,{"inputs":[{"name":"acautomaton"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",5,null],[11,"get_match","","",5,null],[11,"has_match","","",5,null],[11,"start_bytes","","",5,null],[11,"patterns","","",5,null],[11,"pattern","","",5,null],[11,"fmt","","",5,null],[6,"StateIdx","","The integer type used for the state index.",null,null],[8,"Automaton","","An abstraction over automatons and their corresponding iterators.\nThe type parameter `P` is the type of the pattern that was used to\nconstruct this Automaton.",null,null],[10,"next_state","","Return the next state given the current state and next character.",6,null],[10,"has_match","","Return true if and only if the given state and current pattern index\nindicate a match.",6,null],[10,"get_match","","Build a match given the current state, pattern index and input index.",6,null],[10,"start_bytes","","Return the set of bytes that have transitions in the root state.",6,null],[10,"patterns","","Returns all of the patterns matched by this automaton.",6,null],[10,"pattern","","Returns the pattern indexed at `i`.",6,null],[11,"len","","Return the number of patterns in the automaton.",6,null],[11,"is_empty","","Returns true if the automaton has no patterns.",6,null],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,null],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,null],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,null],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,null],[8,"Transitions","","An abstraction over state transition strategies.",null,null],[10,"new","","Return a new state at the given depth.",7,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[10,"goto","","Return the next state index given the next character.",7,null],[10,"set_goto","","Set the next state index for the character given.",7,null],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of transitions.",7,null],[11,"clone","","",8,null],[11,"new","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"into_full","","Build out the entire automaton into a single matrix.",8,null],[11,"next_state","","",8,null],[11,"get_match","","",8,null],[11,"has_match","","",8,null],[11,"start_bytes","","",8,null],[11,"patterns","","",8,null],[11,"pattern","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"new","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"dense"}}],[11,"goto","","",9,null],[11,"set_goto","","",9,null],[11,"heap_bytes","","",9,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"new","","",10,{"inputs":[{"name":"u32"}],"output":{"name":"sparse"}}],[11,"goto","","",10,null],[11,"set_goto","","",10,null],[11,"heap_bytes","","",10,null],[11,"from_iter","","Create an automaton from an iterator of strings.",8,{"inputs":[{"name":"t"}],"output":{"name":"acautomaton"}}],[11,"fmt","","",8,null],[11,"len","","Return the number of patterns in the automaton.",6,null],[11,"is_empty","","Returns true if the automaton has no patterns.",6,null],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,null],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,null],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,null],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,null]],"paths":[[3,"Match"],[3,"Matches"],[3,"StreamMatches"],[3,"MatchesOverlapping"],[3,"StreamMatchesOverlapping"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["tagua_llvm"] = {"doc":"Tagua VM","items":[[0,"builder","tagua_llvm","Build blocks, statements, â€¦ of all kinds.",null,null],[3,"Builder","tagua_llvm::builder","",null,null],[3,"BasicBlock","","",null,null],[11,"fmt","","",0,null],[11,"new","","",0,{"inputs":[{"name":"context"}],"output":{"name":"builder"}}],[11,"move_to_end","","",0,null],[11,"return_void","","",0,null],[11,"return_value","","",0,null],[11,"add","","",0,null],[11,"drop","","",0,null],[11,"to_ref","","",0,null],[11,"from_ref","","",1,{"inputs":[{"name":"llvmbasicblockref"}],"output":{"name":"basicblock"}}],[11,"to_ref","","",1,null],[0,"context","tagua_llvm","Context manipulation.",null,null],[3,"Context","tagua_llvm::context","",null,null],[11,"fmt","","",2,null],[11,"new","","",2,{"inputs":[],"output":{"name":"context"}}],[11,"drop","","",2,null],[11,"to_ref","","",2,null],[0,"engine","tagua_llvm","Execute the VM intermediate representation.",null,null],[3,"Options","tagua_llvm::engine","",null,null],[12,"level","","",3,null],[12,"code_model","","",3,null],[3,"Engine","","",null,null],[4,"OptimizationLevel","","",null,null],[13,"NoOptimizations","","",4,null],[13,"Level1","","",4,null],[13,"Level2","","",4,null],[13,"Level3","","",4,null],[4,"CodeModel","","",null,null],[13,"Default","","",5,null],[13,"JITDefault","","",5,null],[13,"Kernel","","",5,null],[13,"Large","","",5,null],[13,"Medium","","",5,null],[13,"Small","","",5,null],[11,"clone","","",4,null],[11,"new","","",6,{"inputs":[{"name":"module"},{"name":"options"}],"output":{"name":"result"}}],[11,"run_function","","",6,null],[11,"drop","","",6,null],[11,"to_ref","","",6,null],[0,"function","tagua_llvm","Function manipulation.",null,null],[3,"Function","tagua_llvm::function","",null,null],[11,"new","","",7,null],[11,"new_basic_block","","",7,null],[11,"arity","","",7,null],[11,"verify","","",7,null],[11,"to_ref","","",7,null],[0,"module","tagua_llvm","Module manipulation.",null,null],[3,"Module","tagua_llvm::module","",null,null],[11,"new","","",8,{"inputs":[{"name":"str"},{"name":"context"}],"output":{"name":"module"}}],[11,"unown","","",8,null],[11,"verify","","",8,null],[11,"drop","","",8,null],[11,"to_ref","","",8,null],[11,"fmt","","",8,null],[0,"native_type","tagua_llvm","LLVM types manipulation and bindings from Rust types.",null,null],[5,"int1_type","tagua_llvm::native_type","Create a LLVM `int1` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"int8_type","","Create a LLVM `int8` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"int16_type","","Create a LLVM `int16` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"int32_type","","Create a LLVM `int32` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"int64_type","","Create a LLVM `int64` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"double_type","","Create a LLVM `double` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"float_type","","Create a LLVM `float` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"fp128_type","","Create a LLVM `fp128` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"ppcfp128_type","","Create a LLVM `ppcfp128` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"void_type","","Create a LLVM `void` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"x86fp80_type","","Create a LLVM `x86fp80` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"x86mmx_type","","Create a LLVM `x86mmx` type.",null,{"inputs":[{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"int_type","","Create a LLVM `int` type.",null,{"inputs":[{"name":"u32"},{"name":"context"}],"output":{"name":"llvmtyperef"}}],[5,"array_type","","Create a LLVM `array` type.",null,{"inputs":[{"name":"llvmtyperef"},{"name":"u32"}],"output":{"name":"llvmtyperef"}}],[5,"pointer_type","","Create a LLVM `pointer` type.",null,{"inputs":[{"name":"llvmtyperef"},{"name":"u32"}],"output":{"name":"llvmtyperef"}}],[5,"vector_type","","Create a LLVM `vector` type.",null,{"inputs":[{"name":"llvmtyperef"},{"name":"u32"}],"output":{"name":"llvmtyperef"}}],[8,"VMRepresentation","","Map a Rust type to a LLVM type.",null,null],[10,"to_vm_representation","","",9,null],[0,"value","tagua_llvm","Value manipulation.",null,null],[3,"Value","tagua_llvm::value","",null,null],[11,"from_ref","","",10,{"inputs":[{"name":"llvmvalueref"}],"output":{"name":"value"}}],[11,"to_ref","","",10,null],[11,"fmt","","",10,null],[8,"LLVMRef","tagua_llvm","",null,null],[10,"to_ref","","",11,null]],"paths":[[3,"Builder"],[3,"BasicBlock"],[3,"Context"],[3,"Options"],[4,"OptimizationLevel"],[4,"CodeModel"],[3,"Engine"],[3,"Function"],[3,"Module"],[8,"VMRepresentation"],[3,"Value"],[8,"LLVMRef"]]};
searchIndex["llvm_sys"] = {"doc":"Bindings to LLVM&#39;s C API.","items":[[3,"LLVMAttribute","llvm_sys","",null,null],[4,"LLVMMemoryBuffer","","",null,null],[4,"LLVMContext","","",null,null],[4,"LLVMModule","","",null,null],[4,"LLVMType","","",null,null],[4,"LLVMValue","","",null,null],[4,"LLVMBasicBlock","","",null,null],[4,"LLVMBuilder","","",null,null],[4,"LLVMModuleProvider","","",null,null],[4,"LLVMPassManager","","",null,null],[4,"LLVMPassRegistry","","",null,null],[4,"LLVMUse","","",null,null],[4,"LLVMDiagnosticInfo","","",null,null],[4,"LLVMOpcode","","",null,null],[13,"LLVMRet","","",0,null],[13,"LLVMBr","","",0,null],[13,"LLVMSwitch","","",0,null],[13,"LLVMIndirectBr","","",0,null],[13,"LLVMInvoke","","",0,null],[13,"LLVMUnreachable","","",0,null],[13,"LLVMAdd","","",0,null],[13,"LLVMFAdd","","",0,null],[13,"LLVMSub","","",0,null],[13,"LLVMFSub","","",0,null],[13,"LLVMMul","","",0,null],[13,"LLVMFMul","","",0,null],[13,"LLVMUDiv","","",0,null],[13,"LLVMSDiv","","",0,null],[13,"LLVMFDiv","","",0,null],[13,"LLVMURem","","",0,null],[13,"LLVMSRem","","",0,null],[13,"LLVMFRem","","",0,null],[13,"LLVMShl","","",0,null],[13,"LLVMLShr","","",0,null],[13,"LLVMAShr","","",0,null],[13,"LLVMAnd","","",0,null],[13,"LLVMOr","","",0,null],[13,"LLVMXor","","",0,null],[13,"LLVMAlloca","","",0,null],[13,"LLVMLoad","","",0,null],[13,"LLVMStore","","",0,null],[13,"LLVMGetElementPtr","","",0,null],[13,"LLVMTrunc","","",0,null],[13,"LLVMZExt","","",0,null],[13,"LLVMSExt","","",0,null],[13,"LLVMFPToUI","","",0,null],[13,"LLVMFPToSI","","",0,null],[13,"LLVMUIToFP","","",0,null],[13,"LLVMSIToFP","","",0,null],[13,"LLVMFPTrunc","","",0,null],[13,"LLVMFPExt","","",0,null],[13,"LLVMPtrToInt","","",0,null],[13,"LLVMIntToPtr","","",0,null],[13,"LLVMBitCast","","",0,null],[13,"LLVMAddrSpaceCast","","",0,null],[13,"LLVMICmp","","",0,null],[13,"LLVMFCmp","","",0,null],[13,"LLVMPHI","","",0,null],[13,"LLVMCall","","",0,null],[13,"LLVMSelect","","",0,null],[13,"LLVMUserOp1","","",0,null],[13,"LLVMUserOp2","","",0,null],[13,"LLVMVAArg","","",0,null],[13,"LLVMExtractElement","","",0,null],[13,"LLVMInsertElement","","",0,null],[13,"LLVMShuffleVector","","",0,null],[13,"LLVMExtractValue","","",0,null],[13,"LLVMInsertValue","","",0,null],[13,"LLVMFence","","",0,null],[13,"LLVMAtomicCmpXchg","","",0,null],[13,"LLVMAtomicRMW","","",0,null],[13,"LLVMResume","","",0,null],[13,"LLVMLandingPad","","",0,null],[4,"LLVMTypeKind","","",null,null],[13,"LLVMVoidTypeKind","","",1,null],[13,"LLVMHalfTypeKind","","",1,null],[13,"LLVMFloatTypeKind","","",1,null],[13,"LLVMDoubleTypeKind","","",1,null],[13,"LLVMX86_FP80TypeKind","","",1,null],[13,"LLVMFP128TypeKind","","",1,null],[13,"LLVMPPC_FP128TypeKind","","",1,null],[13,"LLVMLabelTypeKind","","",1,null],[13,"LLVMIntegerTypeKind","","",1,null],[13,"LLVMFunctionTypeKind","","",1,null],[13,"LLVMStructTypeKind","","",1,null],[13,"LLVMArrayTypeKind","","",1,null],[13,"LLVMPointerTypeKind","","",1,null],[13,"LLVMVectorTypeKind","","",1,null],[13,"LLVMMetadataTypeKind","","",1,null],[13,"LLVMX86_MMXTypeKind","","",1,null],[4,"LLVMLinkage","","",null,null],[13,"LLVMExternalLinkage","","",2,null],[13,"LLVMAvailableExternallyLinkage","","",2,null],[13,"LLVMLinkOnceAnyLinkage","","",2,null],[13,"LLVMLinkOnceODRLinkage","","",2,null],[13,"LLVMLinkOnceODRAutoHideLinkage","","",2,null],[13,"LLVMWeakAnyLinkage","","",2,null],[13,"LLVMWeakODRLinkage","","",2,null],[13,"LLVMAppendingLinkage","","",2,null],[13,"LLVMInternalLinkage","","",2,null],[13,"LLVMPrivateLinkage","","",2,null],[13,"LLVMDLLImportLinkage","","",2,null],[13,"LLVMDLLExportLinkage","","",2,null],[13,"LLVMExternalWeakLinkage","","",2,null],[13,"LLVMGhostLinkage","","",2,null],[13,"LLVMCommonLinkage","","",2,null],[13,"LLVMLinkerPrivateLinkage","","",2,null],[13,"LLVMLinkerPrivateWeakLinkage","","",2,null],[4,"LLVMVisibility","","",null,null],[13,"LLVMDefaultVisibility","","",3,null],[13,"LLVMHiddenVisibility","","",3,null],[13,"LLVMProtectedVisibility","","",3,null],[4,"LLVMDLLStorageClass","","",null,null],[13,"LLVMDefaultStorageClass","","",4,null],[13,"LLVMDLLImportStorageClass","","",4,null],[13,"LLVMDLLExportStorageClass","","",4,null],[4,"LLVMCallConv","","",null,null],[13,"LLVMCCallConv","","",5,null],[13,"LLVMFastCallConv","","",5,null],[13,"LLVMColdCallConv","","",5,null],[13,"LLVMWebKitJSCallConv","","",5,null],[13,"LLVMAnyRegCallConv","","",5,null],[13,"LLVMX86StdcallCallConv","","",5,null],[13,"LLVMX86FastcallCallConv","","",5,null],[4,"LLVMIntPredicate","","",null,null],[13,"LLVMIntEQ","","",6,null],[13,"LLVMIntNE","","",6,null],[13,"LLVMIntUGT","","",6,null],[13,"LLVMIntUGE","","",6,null],[13,"LLVMIntULT","","",6,null],[13,"LLVMIntULE","","",6,null],[13,"LLVMIntSGT","","",6,null],[13,"LLVMIntSGE","","",6,null],[13,"LLVMIntSLT","","",6,null],[13,"LLVMIntSLE","","",6,null],[4,"LLVMRealPredicate","","",null,null],[13,"LLVMRealPredicateFalse","","",7,null],[13,"LLVMRealOEQ","","",7,null],[13,"LLVMRealOGT","","",7,null],[13,"LLVMRealOGE","","",7,null],[13,"LLVMRealOLT","","",7,null],[13,"LLVMRealOLE","","",7,null],[13,"LLVMRealONE","","",7,null],[13,"LLVMRealORD","","",7,null],[13,"LLVMRealUNO","","",7,null],[13,"LLVMRealUEQ","","",7,null],[13,"LLVMRealUGT","","",7,null],[13,"LLVMRealUGE","","",7,null],[13,"LLVMRealULT","","",7,null],[13,"LLVMRealULE","","",7,null],[13,"LLVMRealUNE","","",7,null],[13,"LLVMRealPredicateTrue","","",7,null],[4,"LLVMLandingPadClauseTy","","",null,null],[13,"LLVMLandingPadCatch","","",8,null],[13,"LLVMLandingPadFilter","","",8,null],[4,"LLVMThreadLocalMode","","",null,null],[13,"LLVMNotThreadLocal","","",9,null],[13,"LLVMGeneralDynamicTLSModel","","",9,null],[13,"LLVMLocalDynamicTLSModel","","",9,null],[13,"LLVMInitialExecTLSModel","","",9,null],[13,"LLVMLocalExecTLSModel","","",9,null],[4,"LLVMAtomicOrdering","","",null,null],[13,"LLVMAtomicOrderingNotAtomic","","",10,null],[13,"LLVMAtomicOrderingUnordered","","",10,null],[13,"LLVMAtomicOrderingMonotonic","","",10,null],[13,"LLVMAtomicOrderingAcquire","","",10,null],[13,"LLVMAtomicOrderingRelease","","",10,null],[13,"LLVMAtomicOrderingAcquireRelease","","",10,null],[13,"LLVMAtomicOrderingSequentiallyConsistent","","",10,null],[4,"LLVMAtomicRMWBinOp","","",null,null],[13,"LLVMAtomicRMWBinOpXchg","","",11,null],[13,"LLVMAtomicRMWBinOpAdd","","",11,null],[13,"LLVMAtomicRMWBinOpSub","","",11,null],[13,"LLVMAtomicRMWBinOpAnd","","",11,null],[13,"LLVMAtomicRMWBinOpNand","","",11,null],[13,"LLVMAtomicRMWBinOpOr","","",11,null],[13,"LLVMAtomicRMWBinOpXor","","",11,null],[13,"LLVMAtomicRMWBinOpMax","","",11,null],[13,"LLVMAtomicRMWBinOpMin","","",11,null],[13,"LLVMAtomicRMWBinOpUMax","","",11,null],[13,"LLVMAtomicRMWBinOpUMin","","",11,null],[4,"LLVMDiagnosticSeverity","","",null,null],[13,"LLVMDSError","","",12,null],[13,"LLVMDSWarning","","",12,null],[13,"LLVMDSRemark","","",12,null],[13,"LLVMDSNote","","",12,null],[0,"prelude","","Core types used throughout LLVM.",null,null],[6,"LLVMBool","llvm_sys::prelude","",null,null],[6,"LLVMMemoryBufferRef","","",null,null],[6,"LLVMContextRef","","",null,null],[6,"LLVMModuleRef","","",null,null],[6,"LLVMTypeRef","","",null,null],[6,"LLVMValueRef","","",null,null],[6,"LLVMBasicBlockRef","","",null,null],[6,"LLVMBuilderRef","","",null,null],[6,"LLVMModuleProviderRef","","",null,null],[6,"LLVMPassManagerRef","","",null,null],[6,"LLVMPassRegistryRef","","",null,null],[6,"LLVMUseRef","","",null,null],[6,"LLVMDiagnosticInfoRef","","",null,null],[0,"analysis","llvm_sys","Various analyses of the LLVM IR.",null,null],[4,"LLVMVerifierFailureAction","llvm_sys::analysis","",null,null],[13,"LLVMAbortProcessAction","","Print to stderr and abort the process.",13,null],[13,"LLVMPrintMessageAction","","Print to stderr and return 1.",13,null],[13,"LLVMReturnStatusAction","","Return 1 and print nothing.",13,null],[5,"LLVMVerifyModule","","Verify that a module is valid, taking the specified action if not.",null,null],[5,"LLVMVerifyFunction","","Verify that a single function is valid, taking the specified action.",null,null],[5,"LLVMViewFunctionCFG","","Open a ghostview window displaying the CFG of the given function.",null,null],[5,"LLVMViewFunctionCFGOnly","","",null,null],[0,"bit_reader","llvm_sys","Input of the LLVM bitcode format.",null,null],[5,"LLVMParseBitcode","llvm_sys::bit_reader","Build a module from the bitcode in the specified memory buffer.",null,null],[5,"LLVMParseBitcodeInContext","","",null,null],[5,"LLVMGetBitcodeModuleInContext","","Read a module from the specified path, returning a module provider\nperforming lazy deserialization.",null,null],[5,"LLVMGetBitcodeModule","","",null,null],[5,"LLVMGetBitcodeModuleProviderInContext","","Deprecated: use LLVMGetBitcodeModuleInContext instead",null,null],[5,"LLVMGetBitcodeModuleProvider","","Deprecated: Use LLVMGetBitcodeModule instead",null,null],[0,"bit_writer","llvm_sys","Output of the LLVM bitcode format.",null,null],[5,"LLVMWriteBitcodeToFile","llvm_sys::bit_writer","Write a module to the specified path.",null,null],[5,"LLVMWriteBitcodeToFD","","Write a module to an open file descriptor.",null,null],[5,"LLVMWriteBitcodeToFileHandle","","Deprecated: use LLVMWriteBitcodeToFD",null,null],[5,"LLVMWriteBitcodeToMemoryBuffer","","Writes a module to a new memory buffer.",null,null],[0,"core","llvm_sys","The LLVM intermediate representation.",null,null],[5,"LLVMInitializeCore","llvm_sys::core","",null,null],[5,"LLVMShutdown","","",null,null],[5,"LLVMCreateMessage","","",null,null],[5,"LLVMDisposeMessage","","",null,null],[5,"LLVMInstallFatalErrorHandler","","",null,null],[5,"LLVMResetFatalErrorHandler","","",null,null],[5,"LLVMEnablePrettyStackTrace","","",null,null],[5,"LLVMContextCreate","","",null,null],[5,"LLVMGetGlobalContext","","",null,null],[5,"LLVMContextSetDiagnosticHandler","","",null,null],[5,"LLVMContextSetYieldCallback","","",null,null],[5,"LLVMContextDispose","","",null,null],[5,"LLVMGetDiagInfoDescription","","",null,null],[5,"LLVMGetDiagInfoSeverity","","",null,null],[5,"LLVMGetMDKindIDInContext","","",null,null],[5,"LLVMGetMDKindID","","",null,null],[5,"LLVMModuleCreateWithName","","",null,null],[5,"LLVMModuleCreateWithNameInContext","","",null,null],[5,"LLVMCloneModule","","",null,null],[5,"LLVMDisposeModule","","",null,null],[5,"LLVMGetDataLayout","","",null,null],[5,"LLVMSetDataLayout","","",null,null],[5,"LLVMGetTarget","","",null,null],[5,"LLVMSetTarget","","",null,null],[5,"LLVMDumpModule","","",null,null],[5,"LLVMPrintModuleToFile","","",null,null],[5,"LLVMPrintModuleToString","","",null,null],[5,"LLVMSetModuleInlineAsm","","",null,null],[5,"LLVMGetModuleContext","","",null,null],[5,"LLVMGetTypeByName","","",null,null],[5,"LLVMGetNamedMetadataNumOperands","","",null,null],[5,"LLVMGetNamedMetadataOperands","","",null,null],[5,"LLVMAddNamedMetadataOperand","","",null,null],[5,"LLVMAddFunction","","",null,null],[5,"LLVMGetNamedFunction","","",null,null],[5,"LLVMGetFirstFunction","","",null,null],[5,"LLVMGetLastFunction","","",null,null],[5,"LLVMGetNextFunction","","",null,null],[5,"LLVMGetPreviousFunction","","",null,null],[5,"LLVMGetTypeKind","","",null,null],[5,"LLVMTypeIsSized","","",null,null],[5,"LLVMGetTypeContext","","",null,null],[5,"LLVMDumpType","","",null,null],[5,"LLVMPrintTypeToString","","",null,null],[5,"LLVMInt1TypeInContext","","",null,null],[5,"LLVMInt8TypeInContext","","",null,null],[5,"LLVMInt16TypeInContext","","",null,null],[5,"LLVMInt32TypeInContext","","",null,null],[5,"LLVMInt64TypeInContext","","",null,null],[5,"LLVMIntTypeInContext","","",null,null],[5,"LLVMInt1Type","","",null,null],[5,"LLVMInt8Type","","",null,null],[5,"LLVMInt16Type","","",null,null],[5,"LLVMInt32Type","","",null,null],[5,"LLVMInt64Type","","",null,null],[5,"LLVMIntType","","",null,null],[5,"LLVMGetIntTypeWidth","","",null,null],[5,"LLVMHalfTypeInContext","","",null,null],[5,"LLVMFloatTypeInContext","","",null,null],[5,"LLVMDoubleTypeInContext","","",null,null],[5,"LLVMX86FP80TypeInContext","","",null,null],[5,"LLVMFP128TypeInContext","","",null,null],[5,"LLVMPPCFP128TypeInContext","","",null,null],[5,"LLVMHalfType","","",null,null],[5,"LLVMFloatType","","",null,null],[5,"LLVMDoubleType","","",null,null],[5,"LLVMX86FP80Type","","",null,null],[5,"LLVMFP128Type","","",null,null],[5,"LLVMPPCFP128Type","","",null,null],[5,"LLVMFunctionType","","",null,null],[5,"LLVMIsFunctionVarArg","","",null,null],[5,"LLVMGetReturnType","","",null,null],[5,"LLVMCountParamTypes","","",null,null],[5,"LLVMGetParamTypes","","",null,null],[5,"LLVMStructTypeInContext","","",null,null],[5,"LLVMStructType","","",null,null],[5,"LLVMStructCreateNamed","","",null,null],[5,"LLVMGetStructName","","",null,null],[5,"LLVMStructSetBody","","",null,null],[5,"LLVMCountStructElementTypes","","",null,null],[5,"LLVMGetStructElementTypes","","",null,null],[5,"LLVMIsPackedStruct","","",null,null],[5,"LLVMIsOpaqueStruct","","",null,null],[5,"LLVMGetElementType","","",null,null],[5,"LLVMArrayType","","",null,null],[5,"LLVMGetArrayLength","","",null,null],[5,"LLVMPointerType","","",null,null],[5,"LLVMGetPointerAddressSpace","","",null,null],[5,"LLVMVectorType","","",null,null],[5,"LLVMGetVectorSize","","",null,null],[5,"LLVMVoidTypeInContext","","",null,null],[5,"LLVMLabelTypeInContext","","",null,null],[5,"LLVMX86MMXTypeInContext","","",null,null],[5,"LLVMVoidType","","",null,null],[5,"LLVMLabelType","","",null,null],[5,"LLVMX86MMXType","","",null,null],[5,"LLVMTypeOf","","",null,null],[5,"LLVMGetValueName","","",null,null],[5,"LLVMSetValueName","","",null,null],[5,"LLVMDumpValue","","",null,null],[5,"LLVMPrintValueToString","","",null,null],[5,"LLVMReplaceAllUsesWith","","",null,null],[5,"LLVMIsConstant","","",null,null],[5,"LLVMIsUndef","","",null,null],[5,"LLVMIsAMDNode","","",null,null],[5,"LLVMIsAMDString","","",null,null],[5,"LLVMGetFirstUse","","",null,null],[5,"LLVMGetNextUse","","",null,null],[5,"LLVMGetUser","","",null,null],[5,"LLVMGetUsedValue","","",null,null],[5,"LLVMGetOperand","","",null,null],[5,"LLVMGetOperandUse","","",null,null],[5,"LLVMSetOperand","","",null,null],[5,"LLVMGetNumOperands","","",null,null],[5,"LLVMConstNull","","",null,null],[5,"LLVMConstAllOnes","","",null,null],[5,"LLVMGetUndef","","",null,null],[5,"LLVMIsNull","","",null,null],[5,"LLVMConstPointerNull","","",null,null],[5,"LLVMConstInt","","",null,null],[5,"LLVMConstIntOfArbitraryPrecision","","",null,null],[5,"LLVMConstIntOfString","","",null,null],[5,"LLVMConstIntOfStringAndSize","","",null,null],[5,"LLVMConstReal","","",null,null],[5,"LLVMConstRealOfString","","",null,null],[5,"LLVMConstRealOfStringAndSize","","",null,null],[5,"LLVMConstIntGetZExtValue","","",null,null],[5,"LLVMConstIntGetSExtValue","","",null,null],[5,"LLVMConstRealGetDouble","","",null,null],[5,"LLVMConstStringInContext","","",null,null],[5,"LLVMConstString","","",null,null],[5,"LLVMIsConstantString","","",null,null],[5,"LLVMGetAsString","","",null,null],[5,"LLVMConstStructInContext","","",null,null],[5,"LLVMConstStruct","","",null,null],[5,"LLVMConstArray","","",null,null],[5,"LLVMConstNamedStruct","","",null,null],[5,"LLVMGetElementAsConstant","","",null,null],[5,"LLVMConstVector","","",null,null],[5,"LLVMGetConstOpcode","","",null,null],[5,"LLVMAlignOf","","",null,null],[5,"LLVMSizeOf","","",null,null],[5,"LLVMConstNeg","","",null,null],[5,"LLVMConstNSWNeg","","",null,null],[5,"LLVMConstNUWNeg","","",null,null],[5,"LLVMConstFNeg","","",null,null],[5,"LLVMConstNot","","",null,null],[5,"LLVMConstAdd","","",null,null],[5,"LLVMConstNSWAdd","","",null,null],[5,"LLVMConstNUWAdd","","",null,null],[5,"LLVMConstFAdd","","",null,null],[5,"LLVMConstSub","","",null,null],[5,"LLVMConstNSWSub","","",null,null],[5,"LLVMConstNUWSub","","",null,null],[5,"LLVMConstFSub","","",null,null],[5,"LLVMConstMul","","",null,null],[5,"LLVMConstNSWMul","","",null,null],[5,"LLVMConstNUWMul","","",null,null],[5,"LLVMConstFMul","","",null,null],[5,"LLVMConstUDiv","","",null,null],[5,"LLVMConstSDiv","","",null,null],[5,"LLVMConstExactSDiv","","",null,null],[5,"LLVMConstFDiv","","",null,null],[5,"LLVMConstURem","","",null,null],[5,"LLVMConstSRem","","",null,null],[5,"LLVMConstFRem","","",null,null],[5,"LLVMConstAnd","","",null,null],[5,"LLVMConstOr","","",null,null],[5,"LLVMConstXor","","",null,null],[5,"LLVMConstICmp","","",null,null],[5,"LLVMConstFCmp","","",null,null],[5,"LLVMConstShl","","",null,null],[5,"LLVMConstLShr","","",null,null],[5,"LLVMConstAShr","","",null,null],[5,"LLVMConstGEP","","",null,null],[5,"LLVMConstInBoundsGEP","","",null,null],[5,"LLVMConstTrunc","","",null,null],[5,"LLVMConstSExt","","",null,null],[5,"LLVMConstZExt","","",null,null],[5,"LLVMConstFPTrunc","","",null,null],[5,"LLVMConstFPExt","","",null,null],[5,"LLVMConstUIToFP","","",null,null],[5,"LLVMConstSIToFP","","",null,null],[5,"LLVMConstFPToUI","","",null,null],[5,"LLVMConstFPToSI","","",null,null],[5,"LLVMConstPtrToInt","","",null,null],[5,"LLVMConstIntToPtr","","",null,null],[5,"LLVMConstBitCast","","",null,null],[5,"LLVMConstAddrSpaceCast","","",null,null],[5,"LLVMConstZExtOrBitCast","","",null,null],[5,"LLVMConstSExtOrBitCast","","",null,null],[5,"LLVMConstTruncOrBitCast","","",null,null],[5,"LLVMConstPointerCast","","",null,null],[5,"LLVMConstIntCast","","",null,null],[5,"LLVMConstFPCast","","",null,null],[5,"LLVMConstSelect","","",null,null],[5,"LLVMConstExtractElement","","",null,null],[5,"LLVMConstInsertElement","","",null,null],[5,"LLVMConstShuffleVector","","",null,null],[5,"LLVMConstExtractValue","","",null,null],[5,"LLVMConstInsertValue","","",null,null],[5,"LLVMConstInlineAsm","","",null,null],[5,"LLVMBlockAddress","","",null,null],[5,"LLVMGetGlobalParent","","",null,null],[5,"LLVMIsDeclaration","","",null,null],[5,"LLVMGetLinkage","","",null,null],[5,"LLVMSetLinkage","","",null,null],[5,"LLVMGetSection","","",null,null],[5,"LLVMSetSection","","",null,null],[5,"LLVMGetVisibility","","",null,null],[5,"LLVMSetVisibility","","",null,null],[5,"LLVMGetDLLStorageClass","","",null,null],[5,"LLVMSetDLLStorageClass","","",null,null],[5,"LLVMHasUnnamedAddr","","",null,null],[5,"LLVMSetUnnamedAddr","","",null,null],[5,"LLVMGetAlignment","","",null,null],[5,"LLVMSetAlignment","","",null,null],[5,"LLVMAddGlobal","","",null,null],[5,"LLVMAddGlobalInAddressSpace","","",null,null],[5,"LLVMGetNamedGlobal","","",null,null],[5,"LLVMGetFirstGlobal","","",null,null],[5,"LLVMGetLastGlobal","","",null,null],[5,"LLVMGetNextGlobal","","",null,null],[5,"LLVMGetPreviousGlobal","","",null,null],[5,"LLVMDeleteGlobal","","",null,null],[5,"LLVMGetInitializer","","",null,null],[5,"LLVMSetInitializer","","",null,null],[5,"LLVMIsThreadLocal","","",null,null],[5,"LLVMSetThreadLocal","","",null,null],[5,"LLVMIsGlobalConstant","","",null,null],[5,"LLVMSetGlobalConstant","","",null,null],[5,"LLVMGetThreadLocalMode","","",null,null],[5,"LLVMSetThreadLocalMode","","",null,null],[5,"LLVMIsExternallyInitialized","","",null,null],[5,"LLVMSetExternallyInitialized","","",null,null],[5,"LLVMAddAlias","","",null,null],[5,"LLVMDeleteFunction","","",null,null],[5,"LLVMGetIntrinsicID","","",null,null],[5,"LLVMGetFunctionCallConv","","",null,null],[5,"LLVMSetFunctionCallConv","","",null,null],[5,"LLVMGetGC","","",null,null],[5,"LLVMSetGC","","",null,null],[5,"LLVMAddFunctionAttr","","",null,null],[5,"LLVMAddTargetDependentFunctionAttr","","",null,null],[5,"LLVMGetFunctionAttr","","",null,null],[5,"LLVMRemoveFunctionAttr","","",null,null],[5,"LLVMCountParams","","",null,null],[5,"LLVMGetParams","","",null,null],[5,"LLVMGetParam","","",null,null],[5,"LLVMGetParamParent","","",null,null],[5,"LLVMGetFirstParam","","",null,null],[5,"LLVMGetLastParam","","",null,null],[5,"LLVMGetNextParam","","",null,null],[5,"LLVMGetPreviousParam","","",null,null],[5,"LLVMAddAttribute","","",null,null],[5,"LLVMRemoveAttribute","","",null,null],[5,"LLVMGetAttribute","","",null,null],[5,"LLVMSetParamAlignment","","",null,null],[5,"LLVMMDStringInContext","","",null,null],[5,"LLVMMDString","","",null,null],[5,"LLVMMDNodeInContext","","",null,null],[5,"LLVMMDNode","","",null,null],[5,"LLVMGetMDString","","",null,null],[5,"LLVMGetMDNodeNumOperands","","",null,null],[5,"LLVMGetMDNodeOperands","","",null,null],[5,"LLVMBasicBlockAsValue","","",null,null],[5,"LLVMValueIsBasicBlock","","",null,null],[5,"LLVMValueAsBasicBlock","","",null,null],[5,"LLVMGetBasicBlockParent","","",null,null],[5,"LLVMGetBasicBlockTerminator","","",null,null],[5,"LLVMCountBasicBlocks","","",null,null],[5,"LLVMGetBasicBlocks","","",null,null],[5,"LLVMGetFirstBasicBlock","","",null,null],[5,"LLVMGetLastBasicBlock","","",null,null],[5,"LLVMGetNextBasicBlock","","",null,null],[5,"LLVMGetPreviousBasicBlock","","",null,null],[5,"LLVMGetEntryBasicBlock","","",null,null],[5,"LLVMAppendBasicBlockInContext","","",null,null],[5,"LLVMAppendBasicBlock","","",null,null],[5,"LLVMInsertBasicBlockInContext","","",null,null],[5,"LLVMInsertBasicBlock","","",null,null],[5,"LLVMDeleteBasicBlock","","",null,null],[5,"LLVMRemoveBasicBlockFromParent","","",null,null],[5,"LLVMMoveBasicBlockBefore","","",null,null],[5,"LLVMMoveBasicBlockAfter","","",null,null],[5,"LLVMGetFirstInstruction","","",null,null],[5,"LLVMGetLastInstruction","","",null,null],[5,"LLVMHasMetadata","","",null,null],[5,"LLVMGetMetadata","","",null,null],[5,"LLVMSetMetadata","","",null,null],[5,"LLVMGetInstructionParent","","",null,null],[5,"LLVMGetNextInstruction","","",null,null],[5,"LLVMGetPreviousInstruction","","",null,null],[5,"LLVMInstructionEraseFromParent","","",null,null],[5,"LLVMGetInstructionOpcode","","",null,null],[5,"LLVMGetICmpPredicate","","",null,null],[5,"LLVMGetFCmpPredicate","","",null,null],[5,"LLVMInstructionClone","","",null,null],[5,"LLVMSetInstructionCallConv","","",null,null],[5,"LLVMGetInstructionCallConv","","",null,null],[5,"LLVMAddInstrAttribute","","",null,null],[5,"LLVMRemoveInstrAttribute","","",null,null],[5,"LLVMSetInstrParamAlignment","","",null,null],[5,"LLVMIsTailCall","","",null,null],[5,"LLVMSetTailCall","","",null,null],[5,"LLVMGetNumSuccessors","","",null,null],[5,"LLVMGetSuccessor","","",null,null],[5,"LLVMSetSuccessor","","",null,null],[5,"LLVMIsConditional","","",null,null],[5,"LLVMGetCondition","","",null,null],[5,"LLVMSetCondition","","",null,null],[5,"LLVMGetSwitchDefaultDest","","",null,null],[5,"LLVMAddIncoming","","",null,null],[5,"LLVMCountIncoming","","",null,null],[5,"LLVMGetIncomingValue","","",null,null],[5,"LLVMGetIncomingBlock","","",null,null],[5,"LLVMIsAArgument","","",null,null],[5,"LLVMIsABasicBlock","","",null,null],[5,"LLVMIsAInlineAsm","","",null,null],[5,"LLVMIsAUser","","",null,null],[5,"LLVMIsAConstant","","",null,null],[5,"LLVMIsABlockAddress","","",null,null],[5,"LLVMIsAConstantAggregateZero","","",null,null],[5,"LLVMIsAConstantArray","","",null,null],[5,"LLVMIsAConstantDataSequential","","",null,null],[5,"LLVMIsAConstantDataArray","","",null,null],[5,"LLVMIsAConstantDataVector","","",null,null],[5,"LLVMIsAConstantExpr","","",null,null],[5,"LLVMIsAConstantFP","","",null,null],[5,"LLVMIsAConstantInt","","",null,null],[5,"LLVMIsAConstantPointerNull","","",null,null],[5,"LLVMIsAConstantStruct","","",null,null],[5,"LLVMIsAConstantVector","","",null,null],[5,"LLVMIsAGlobalValue","","",null,null],[5,"LLVMIsAGlobalAlias","","",null,null],[5,"LLVMIsAGlobalObject","","",null,null],[5,"LLVMIsAFunction","","",null,null],[5,"LLVMIsAGlobalVariable","","",null,null],[5,"LLVMIsAUndefValue","","",null,null],[5,"LLVMIsAInstruction","","",null,null],[5,"LLVMIsABinaryOperator","","",null,null],[5,"LLVMIsACallInst","","",null,null],[5,"LLVMIsAIntrinsicInst","","",null,null],[5,"LLVMIsADbgInfoIntrinsic","","",null,null],[5,"LLVMIsADbgDeclareInst","","",null,null],[5,"LLVMIsAMemIntrinsic","","",null,null],[5,"LLVMIsAMemCpyInst","","",null,null],[5,"LLVMIsAMemMoveInst","","",null,null],[5,"LLVMIsAMemSetInst","","",null,null],[5,"LLVMIsACmpInst","","",null,null],[5,"LLVMIsAFCmpInst","","",null,null],[5,"LLVMIsAICmpInst","","",null,null],[5,"LLVMIsAExtractElementInst","","",null,null],[5,"LLVMIsAGetElementPtrInst","","",null,null],[5,"LLVMIsAInsertElementInst","","",null,null],[5,"LLVMIsAInsertValueInst","","",null,null],[5,"LLVMIsALandingPadInst","","",null,null],[5,"LLVMIsAPHINode","","",null,null],[5,"LLVMIsASelectInst","","",null,null],[5,"LLVMIsAShuffleVectorInst","","",null,null],[5,"LLVMIsAStoreInst","","",null,null],[5,"LLVMIsATerminatorInst","","",null,null],[5,"LLVMIsABranchInst","","",null,null],[5,"LLVMIsAIndirectBrInst","","",null,null],[5,"LLVMIsAInvokeInst","","",null,null],[5,"LLVMIsAReturnInst","","",null,null],[5,"LLVMIsASwitchInst","","",null,null],[5,"LLVMIsAUnreachableInst","","",null,null],[5,"LLVMIsAResumeInst","","",null,null],[5,"LLVMIsAUnaryInstruction","","",null,null],[5,"LLVMIsAAllocaInst","","",null,null],[5,"LLVMIsACastInst","","",null,null],[5,"LLVMIsAAddrSpaceCastInst","","",null,null],[5,"LLVMIsABitCastInst","","",null,null],[5,"LLVMIsAFPExtInst","","",null,null],[5,"LLVMIsAFPToSIInst","","",null,null],[5,"LLVMIsAFPToUIInst","","",null,null],[5,"LLVMIsAFPTruncInst","","",null,null],[5,"LLVMIsAIntToPtrInst","","",null,null],[5,"LLVMIsAPtrToIntInst","","",null,null],[5,"LLVMIsASExtInst","","",null,null],[5,"LLVMIsASIToFPInst","","",null,null],[5,"LLVMIsATruncInst","","",null,null],[5,"LLVMIsAUIToFPInst","","",null,null],[5,"LLVMIsAZExtInst","","",null,null],[5,"LLVMIsAExtractValueInst","","",null,null],[5,"LLVMIsALoadInst","","",null,null],[5,"LLVMIsAVAArgInst","","",null,null],[5,"LLVMCreateBuilderInContext","","",null,null],[5,"LLVMCreateBuilder","","",null,null],[5,"LLVMPositionBuilder","","",null,null],[5,"LLVMPositionBuilderBefore","","",null,null],[5,"LLVMPositionBuilderAtEnd","","",null,null],[5,"LLVMGetInsertBlock","","",null,null],[5,"LLVMClearInsertionPosition","","",null,null],[5,"LLVMInsertIntoBuilder","","",null,null],[5,"LLVMInsertIntoBuilderWithName","","",null,null],[5,"LLVMDisposeBuilder","","",null,null],[5,"LLVMSetCurrentDebugLocation","","",null,null],[5,"LLVMGetCurrentDebugLocation","","",null,null],[5,"LLVMSetInstDebugLocation","","",null,null],[5,"LLVMBuildRetVoid","","",null,null],[5,"LLVMBuildRet","","",null,null],[5,"LLVMBuildAggregateRet","","",null,null],[5,"LLVMBuildBr","","",null,null],[5,"LLVMBuildCondBr","","",null,null],[5,"LLVMBuildSwitch","","",null,null],[5,"LLVMBuildIndirectBr","","",null,null],[5,"LLVMBuildInvoke","","",null,null],[5,"LLVMBuildLandingPad","","",null,null],[5,"LLVMBuildResume","","",null,null],[5,"LLVMBuildUnreachable","","",null,null],[5,"LLVMAddCase","","Add a case to a `switch` instruction",null,null],[5,"LLVMAddDestination","","Add a destination to an `indirectbr` instruction",null,null],[5,"LLVMAddClause","","Add a catch or filter clause to a `landingpad` instruction",null,null],[5,"LLVMSetCleanup","","Set the cleanup flag in a `landingpad` instruction.",null,null],[5,"LLVMBuildAdd","","",null,null],[5,"LLVMBuildNSWAdd","","",null,null],[5,"LLVMBuildNUWAdd","","",null,null],[5,"LLVMBuildFAdd","","",null,null],[5,"LLVMBuildSub","","",null,null],[5,"LLVMBuildNSWSub","","",null,null],[5,"LLVMBuildNUWSub","","",null,null],[5,"LLVMBuildFSub","","",null,null],[5,"LLVMBuildMul","","",null,null],[5,"LLVMBuildNSWMul","","",null,null],[5,"LLVMBuildNUWMul","","",null,null],[5,"LLVMBuildFMul","","",null,null],[5,"LLVMBuildUDiv","","",null,null],[5,"LLVMBuildSDiv","","",null,null],[5,"LLVMBuildExactSDiv","","",null,null],[5,"LLVMBuildFDiv","","",null,null],[5,"LLVMBuildURem","","",null,null],[5,"LLVMBuildSRem","","",null,null],[5,"LLVMBuildFRem","","",null,null],[5,"LLVMBuildShl","","",null,null],[5,"LLVMBuildLShr","","",null,null],[5,"LLVMBuildAShr","","",null,null],[5,"LLVMBuildAnd","","",null,null],[5,"LLVMBuildOr","","",null,null],[5,"LLVMBuildXor","","",null,null],[5,"LLVMBuildBinOp","","",null,null],[5,"LLVMBuildNeg","","",null,null],[5,"LLVMBuildNSWNeg","","",null,null],[5,"LLVMBuildNUWNeg","","",null,null],[5,"LLVMBuildFNeg","","",null,null],[5,"LLVMBuildNot","","",null,null],[5,"LLVMBuildMalloc","","",null,null],[5,"LLVMBuildArrayMalloc","","",null,null],[5,"LLVMBuildAlloca","","",null,null],[5,"LLVMBuildArrayAlloca","","",null,null],[5,"LLVMBuildFree","","",null,null],[5,"LLVMBuildLoad","","",null,null],[5,"LLVMBuildStore","","",null,null],[5,"LLVMBuildGEP","","",null,null],[5,"LLVMBuildInBoundsGEP","","",null,null],[5,"LLVMBuildStructGEP","","",null,null],[5,"LLVMBuildGlobalString","","",null,null],[5,"LLVMBuildGlobalStringPtr","","",null,null],[5,"LLVMGetVolatile","","",null,null],[5,"LLVMSetVolatile","","",null,null],[5,"LLVMBuildTrunc","","",null,null],[5,"LLVMBuildZExt","","",null,null],[5,"LLVMBuildSExt","","",null,null],[5,"LLVMBuildFPToUI","","",null,null],[5,"LLVMBuildFPToSI","","",null,null],[5,"LLVMBuildUIToFP","","",null,null],[5,"LLVMBuildSIToFP","","",null,null],[5,"LLVMBuildFPTrunc","","",null,null],[5,"LLVMBuildFPExt","","",null,null],[5,"LLVMBuildPtrToInt","","",null,null],[5,"LLVMBuildIntToPtr","","",null,null],[5,"LLVMBuildBitCast","","",null,null],[5,"LLVMBuildAddrSpaceCast","","",null,null],[5,"LLVMBuildZExtOrBitCast","","",null,null],[5,"LLVMBuildSExtOrBitCast","","",null,null],[5,"LLVMBuildTruncOrBitCast","","",null,null],[5,"LLVMBuildCast","","",null,null],[5,"LLVMBuildPointerCast","","",null,null],[5,"LLVMBuildIntCast","","",null,null],[5,"LLVMBuildFPCast","","",null,null],[5,"LLVMBuildICmp","","",null,null],[5,"LLVMBuildFCmp","","",null,null],[5,"LLVMBuildPhi","","",null,null],[5,"LLVMBuildCall","","",null,null],[5,"LLVMBuildSelect","","",null,null],[5,"LLVMBuildVAArg","","",null,null],[5,"LLVMBuildExtractElement","","",null,null],[5,"LLVMBuildInsertElement","","",null,null],[5,"LLVMBuildShuffleVector","","",null,null],[5,"LLVMBuildExtractValue","","",null,null],[5,"LLVMBuildInsertValue","","",null,null],[5,"LLVMBuildIsNull","","",null,null],[5,"LLVMBuildIsNotNull","","",null,null],[5,"LLVMBuildPtrDiff","","",null,null],[5,"LLVMBuildFence","","",null,null],[5,"LLVMBuildAtomicRMW","","",null,null],[5,"LLVMCreateModuleProviderForExistingModule","","",null,null],[5,"LLVMDisposeModuleProvider","","",null,null],[5,"LLVMCreateMemoryBufferWithContentsOfFile","","",null,null],[5,"LLVMCreateMemoryBufferWithSTDIN","","",null,null],[5,"LLVMCreateMemoryBufferWithMemoryRange","","",null,null],[5,"LLVMCreateMemoryBufferWithMemoryRangeCopy","","",null,null],[5,"LLVMGetBufferStart","","",null,null],[5,"LLVMGetBufferSize","","",null,null],[5,"LLVMDisposeMemoryBuffer","","",null,null],[5,"LLVMGetGlobalPassRegistry","","",null,null],[5,"LLVMCreatePassManager","","",null,null],[5,"LLVMCreateFunctionPassManagerForModule","","",null,null],[5,"LLVMCreateFunctionPassManager","","",null,null],[5,"LLVMRunPassManager","","",null,null],[5,"LLVMInitializeFunctionPassManager","","",null,null],[5,"LLVMRunFunctionPassManager","","",null,null],[5,"LLVMFinalizeFunctionPassManager","","",null,null],[5,"LLVMDisposePassManager","","",null,null],[5,"LLVMStartMultithreaded","","Deprecated: LLVM threading is configured at compile-time with `LLVM_ENABLE_THREADS`",null,null],[5,"LLVMStopMultithreaded","","Deprecated: LLVM threading is configured at compile-time with `LLVM_ENABLE_THREADS`",null,null],[5,"LLVMIsMultithreaded","","",null,null],[0,"disassembler","llvm_sys","A disassembler library.",null,null],[3,"LLVMOpInfoSymbol1","llvm_sys::disassembler","",null,null],[12,"Present","","1 if this symbol is present.",14,null],[12,"Name","","Symbol name if not NULL.",14,null],[12,"Value","","Symbol value if name is NULL.",14,null],[3,"Struct_LLVMOpInfo1","","",null,null],[12,"AddSymbol","","",15,null],[12,"SubtractSymbol","","",15,null],[12,"Value","","",15,null],[12,"VariantKind","","",15,null],[4,"LLVMOpaqueDisasmContext","","",null,null],[5,"LLVMCreateDisasm","","",null,null],[5,"LLVMCreateDisasmCPU","","",null,null],[5,"LLVMCreateDisasmCPUFeatures","","",null,null],[5,"LLVMSetDisasmOptions","","",null,null],[5,"LLVMDisasmDispose","","",null,null],[5,"LLVMDisasmInstruction","","",null,null],[6,"LLVMDisasmContextRef","","",null,null],[6,"LLVMOpInfoCallback","","",null,null],[6,"LLVMSymbolLookupCallback","","",null,null],[17,"LLVMDisassembler_VariantKind_None","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM_HI16","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM_LO16","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_PAGE","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_PAGEOFF","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_GOTPAGE","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_GOTPAGEOFF","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_TLVP","","",null,null],[17,"LLVMDisassembler_VariantKind_ARM64_TLVOFF","","",null,null],[17,"LLVMDisassembler_ReferenceType_InOut_None","","No input reference type or no output reference type.",null,null],[17,"LLVMDisassembler_ReferenceType_In_Branch","","The input reference is from a branch instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_PCrel_Load","","The input reference is from a PC relative load instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_ARM64_ADRP","","The input reference is from an ARM64::ADRP instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_ARM64_ADDXri","","The input reference is from an ARM64::ADDXri instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_ARM64_LDRXui","","The input reference is from an ARM64::LDRXui instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_ARM64_LDRXl","","The input reference is from an ARM64::LDRXl instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_In_ARM64_ADR","","The input reference is from an ARM64::ADR instruction.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_SymbolStub","","The output reference is to as symbol stub.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_LitPool_SymAddr","","The output reference is to a symbol address in a literal pool.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_LitPool_CstrAddr","","The output reference is to a cstring address in a literal pool.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_Objc_CFString_Ref","","The output reference is to a Objective-C CoreFoundation string.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Message","","The output reference is to a Objective-C message.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Message_Ref","","The output reference is to a Objective-C message ref.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Selector_Ref","","The output reference is to a Objective-C selector ref.",null,null],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Class_Ref","","The output reference is to a Objective-C class ref.",null,null],[17,"LLVMDisassembler_ReferenceType_DeMangled_Name","","The output reference is to a C++ symbol name.",null,null],[17,"LLVMDisassembler_Option_UseMarkup","","The option to produce marked up assembly.",null,null],[17,"LLVMDisassembler_Option_PrintImmHex","","The option to print immediates as hex.",null,null],[17,"LLVMDisassembler_Option_AsmPrinterVariant","","The option use the other assembler printer variant",null,null],[17,"LLVMDisassembler_Option_SetInstrComments","","The option to set comment on instructions",null,null],[17,"LLVMDisassembler_Option_PrintLatency","","The option to print latency information alongside instructions",null,null],[0,"execution_engine","llvm_sys","Runtime code generation and execution.",null,null],[3,"LLVMMCJITCompilerOptions","llvm_sys::execution_engine","",null,null],[12,"OptLevel","","",16,null],[12,"CodeModel","","",16,null],[12,"NoFramePointerElim","","",16,null],[12,"EnableFastISel","","",16,null],[12,"MCJMM","","",16,null],[4,"LLVMOpaqueGenericValue","","",null,null],[4,"LLVMOpaqueExecutionEngine","","",null,null],[4,"LLVMOpaqueMCJITMemoryManager","","",null,null],[5,"LLVMLinkInMCJIT","","",null,null],[5,"LLVMLinkInInterpreter","","",null,null],[5,"LLVMCreateGenericValueOfInt","","",null,null],[5,"LLVMCreateGenericValueOfPointer","","",null,null],[5,"LLVMCreateGenericValueOfFloat","","",null,null],[5,"LLVMGenericValueIntWidth","","",null,null],[5,"LLVMGenericValueToInt","","",null,null],[5,"LLVMGenericValueToPointer","","",null,null],[5,"LLVMGenericValueToFloat","","",null,null],[5,"LLVMDisposeGenericValue","","",null,null],[5,"LLVMCreateExecutionEngineForModule","","",null,null],[5,"LLVMCreateInterpreterForModule","","",null,null],[5,"LLVMCreateJITCompilerForModule","","",null,null],[5,"LLVMInitializeMCJITCompilerOptions","","",null,null],[5,"LLVMCreateMCJITCompilerForModule","","Create an MCJIT execution engine for a module, with the given options.",null,null],[5,"LLVMCreateExecutionEngine","","Deprecated: Use LLVMCreateExecutionEngineForModule instead",null,null],[5,"LLVMCreateInterpreter","","Deprecated: Use LLVMCreateInterpreterForModule instead",null,null],[5,"LLVMCreateJITCompiler","","Deprecated: Use LLVMCreateJITCompilerForModule instead",null,null],[5,"LLVMDisposeExecutionEngine","","",null,null],[5,"LLVMRunStaticConstructors","","",null,null],[5,"LLVMRunStaticDestructors","","",null,null],[5,"LLVMRunFunctionAsMain","","",null,null],[5,"LLVMRunFunction","","",null,null],[5,"LLVMFreeMachineCodeForFunction","","",null,null],[5,"LLVMAddModule","","",null,null],[5,"LLVMAddModuleProvider","","",null,null],[5,"LLVMRemoveModule","","",null,null],[5,"LLVMRemoveModuleProvider","","Deprecated: Use LLVMRemoveModule instead",null,null],[5,"LLVMFindFunction","","",null,null],[5,"LLVMRecompileAndRelinkFunction","","",null,null],[5,"LLVMGetExecutionEngineTargetData","","",null,null],[5,"LLVMGetExecutionEngineTargetMachine","","",null,null],[5,"LLVMAddGlobalMapping","","",null,null],[5,"LLVMGetPointerToGlobal","","",null,null],[5,"LLVMGetGlobalValueAddress","","",null,null],[5,"LLVMGetFunctionAddress","","",null,null],[5,"LLVMCreateSimpleMCJITMemoryManager","","Create a simple custom MCJIT memory manager.",null,null],[5,"LLVMDisposeMCJITMemoryManager","","",null,null],[6,"LLVMGenericValueRef","","",null,null],[6,"LLVMExecutionEngineRef","","",null,null],[6,"LLVMMCJITMemoryManagerRef","","",null,null],[6,"LLVMMemoryManagerAllocateCodeSectionCallback","","",null,null],[6,"LLVMMemoryManagerAllocateDataSectionCallback","","",null,null],[6,"LLVMMemoryManagerFinalizeMemoryCallback","","",null,null],[6,"LLVMMemoryManagerDestroyCallback","","",null,null],[11,"clone","","",16,null],[0,"initialization","llvm_sys","Initialization routines which must be called before using library features.",null,null],[5,"LLVMInitializeCore","llvm_sys::initialization","",null,null],[5,"LLVMInitializeTransformUtils","","",null,null],[5,"LLVMInitializeScalarOpts","","",null,null],[5,"LLVMInitializeObjCARCOpts","","",null,null],[5,"LLVMInitializeVectorization","","",null,null],[5,"LLVMInitializeInstCombine","","",null,null],[5,"LLVMInitializeIPO","","",null,null],[5,"LLVMInitializeInstrumentation","","",null,null],[5,"LLVMInitializeAnalysis","","",null,null],[5,"LLVMInitializeIPA","","",null,null],[5,"LLVMInitializeCodeGen","","",null,null],[5,"LLVMInitializeTarget","","",null,null],[0,"ir_reader","llvm_sys","The IR reader",null,null],[5,"LLVMParseIRInContext","llvm_sys::ir_reader","Read LLVM IR from a memory buffer and convert it to an in-memory Module.",null,null],[0,"link_time_optimizer","llvm_sys","Link-time-optimization",null,null],[4,"llvm_lto_status_t","llvm_sys::link_time_optimizer","",null,null],[13,"LLVM_LTO_UNKNOWN","","",17,null],[13,"LLVM_LTO_OPT_SUCCESS","","",17,null],[13,"LLVM_LTO_READ_SUCCESS","","",17,null],[13,"LLVM_LTO_READ_FAILURE","","",17,null],[13,"LLVM_LTO_WRITE_FAILURE","","",17,null],[13,"LLVM_LTO_NO_TARGET","","",17,null],[13,"LLVM_LTO_NO_WORK","","",17,null],[13,"LLVM_LTO_MODULE_MERGE_FAILURE","","",17,null],[13,"LLVM_LTO_ASM_FAILURE","","",17,null],[13,"LLVM_LTO_NULL_OBJECT","","",17,null],[5,"llvm_create_optimizer","","",null,null],[5,"llvm_destroy_optimizer","","",null,null],[5,"llvm_read_object_file","","",null,null],[5,"llvm_optimize_modules","","",null,null],[6,"llvm_lto_t","","Dummy type for pointers to the LTO object",null,null],[0,"linker","llvm_sys","The module/file/archive linker",null,null],[4,"LLVMLinkerMode","llvm_sys::linker","",null,null],[13,"LLVMLinkerDestroySource","","",18,null],[13,"LLVMLinkerPreserveSource","","",18,null],[5,"LLVMLinkModules","","Link the source module into the destination.",null,null],[0,"lto","llvm_sys","Abstract link time optimization.",null,null],[4,"lto_symbol_attributes","llvm_sys::lto","",null,null],[13,"LTO_SYMBOL_ALIGNMENT_MASK","","",19,null],[13,"LTO_SYMBOL_PERMISSIONS_MASK","","",19,null],[13,"LTO_SYMBOL_PERMISSIONS_CODE","","",19,null],[13,"LTO_SYMBOL_PERMISSIONS_DATA","","",19,null],[13,"LTO_SYMBOL_PERMISSIONS_RODATA","","",19,null],[13,"LTO_SYMBOL_DEFINITION_MASK","","",19,null],[13,"LTO_SYMBOL_DEFINITION_REGULAR","","",19,null],[13,"LTO_SYMBOL_DEFINITION_TENTATIVE","","",19,null],[13,"LTO_SYMBOL_DEFINITION_WEAK","","",19,null],[13,"LTO_SYMBOL_DEFINITION_UNDEFINED","","",19,null],[13,"LTO_SYMBOL_DEFINITION_WEAKUNDEF","","",19,null],[13,"LTO_SYMBOL_SCOPE_MASK","","",19,null],[13,"LTO_SYMBOL_SCOPE_INTERNAL","","",19,null],[13,"LTO_SYMBOL_SCOPE_HIDDEN","","",19,null],[13,"LTO_SYMBOL_SCOPE_PROTECTED","","",19,null],[13,"LTO_SYMBOL_SCOPE_DEFAULT","","",19,null],[13,"LTO_SYMBOL_SCOPE_DEFAULT_CAN_BE_HIDDEN","","",19,null],[4,"lto_debug_model","","",null,null],[13,"LTO_DEBUG_MODEL_NONE","","",20,null],[13,"LTO_DEBUG_MODEL_DWARF","","",20,null],[4,"lto_codegen_model","","",null,null],[13,"LTO_CODEGEN_PIC_MODEL_STATIC","","",21,null],[13,"LTO_CODEGEN_PIC_MODEL_DYNAMIC","","",21,null],[13,"LTO_CODEGEN_PIC_MODEL_DYNAMIC_NO_PIC","","",21,null],[13,"LTO_CODEGEN_PIC_MODEL_DEFAULT","","",21,null],[4,"LLVMOpaqueLTOModule","","",null,null],[4,"LLVMOpaqueLTOCodeGenerator","","",null,null],[4,"lto_codegen_diagnostic_severity_t","","",null,null],[13,"LTO_DS_ERROR","","",22,null],[13,"LTO_DS_WARNING","","",22,null],[13,"LTO_DS_REMARK","","",22,null],[13,"LTO_DS_NOTE","","",22,null],[5,"lto_get_version","","",null,null],[5,"lto_get_error_message","","",null,null],[5,"lto_module_is_object_file","","",null,null],[5,"lto_module_is_object_file_for_target","","",null,null],[5,"lto_module_is_object_file_in_memory","","",null,null],[5,"lto_module_is_object_file_in_memory_for_target","","",null,null],[5,"lto_module_create","","",null,null],[5,"lto_module_create_from_memory","","",null,null],[5,"lto_module_create_from_memory_with_path","","",null,null],[5,"lto_module_create_in_local_context","","",null,null],[5,"lto_module_create_in_codegen_context","","",null,null],[5,"lto_module_create_from_fd","","",null,null],[5,"lto_module_create_from_fd_at_offset","","",null,null],[5,"lto_module_dispose","","",null,null],[5,"lto_module_get_target_triple","","",null,null],[5,"lto_module_set_target_triple","","",null,null],[5,"lto_module_get_num_symbols","","",null,null],[5,"lto_module_get_symbol_name","","",null,null],[5,"lto_module_get_symbol_attribute","","",null,null],[5,"lto_module_get_num_deplibs","","",null,null],[5,"lto_module_get_deplib","","",null,null],[5,"lto_module_get_num_linkeropts","","",null,null],[5,"lto_module_get_linkeropt","","",null,null],[5,"lto_codegen_set_diagnostic_handler","","",null,null],[5,"lto_codegen_create","","",null,null],[5,"lto_codegen_create_in_local_context","","",null,null],[5,"lto_codegen_dispose","","",null,null],[5,"lto_codegen_add_module","","",null,null],[5,"lto_codegen_set_debug_model","","",null,null],[5,"lto_codegen_set_pic_model","","",null,null],[5,"lto_codegen_set_cpu","","",null,null],[5,"lto_codegen_set_assembler_path","","",null,null],[5,"lto_codegen_set_assembler_args","","",null,null],[5,"lto_codegen_add_must_preserve_symbol","","",null,null],[5,"lto_codegen_write_merged_modules","","",null,null],[5,"lto_codegen_compile","","",null,null],[5,"lto_codegen_compile_to_file","","",null,null],[5,"lto_codegen_debug_options","","",null,null],[5,"lto_initialize_disassembler","","",null,null],[6,"lto_bool_t","","",null,null],[6,"lto_module_t","","",null,null],[6,"lto_code_gen_t","","",null,null],[6,"lto_diagnostic_handler_t","","",null,null],[0,"object","llvm_sys","Object file reading and writing",null,null],[4,"LLVMOpaqueObjectFile","llvm_sys::object","",null,null],[4,"LLVMOpaqueSectionIterator","","",null,null],[4,"LLVMOpaqueSymbolIterator","","",null,null],[4,"LLVMOpaqueRelocationIterator","","",null,null],[5,"LLVMCreateObjectFile","","",null,null],[5,"LLVMDisposeObjectFile","","",null,null],[5,"LLVMGetSections","","",null,null],[5,"LLVMDisposeSectionIterator","","",null,null],[5,"LLVMIsSectionIteratorAtEnd","","",null,null],[5,"LLVMMoveToNextSection","","",null,null],[5,"LLVMMoveToContainingSection","","",null,null],[5,"LLVMGetSymbols","","",null,null],[5,"LLVMDisposeSymbolIterator","","",null,null],[5,"LLVMIsSymbolIteratorAtEnd","","",null,null],[5,"LLVMMoveToNextSymbol","","",null,null],[5,"LLVMGetSectionName","","",null,null],[5,"LLVMGetSectionSize","","",null,null],[5,"LLVMGetSectionContents","","",null,null],[5,"LLVMGetSectionAddress","","",null,null],[5,"LLVMGetSectionContainsSymbol","","",null,null],[5,"LLVMGetRelocations","","",null,null],[5,"LLVMDisposeRelocationIterator","","",null,null],[5,"LLVMIsRelocationIteratorAtEnd","","",null,null],[5,"LLVMMoveToNextRelocation","","",null,null],[5,"LLVMGetSymbolName","","",null,null],[5,"LLVMGetSymbolAddress","","",null,null],[5,"LLVMGetSymbolSize","","",null,null],[5,"LLVMGetRelocationAddress","","",null,null],[5,"LLVMGetRelocationOffset","","",null,null],[5,"LLVMGetRelocationSymbol","","",null,null],[5,"LLVMGetRelocationType","","",null,null],[5,"LLVMGetRelocationTypeName","","",null,null],[5,"LLVMGetRelocationValueString","","",null,null],[6,"LLVMObjectFileRef","","",null,null],[6,"LLVMSectionIteratorRef","","",null,null],[6,"LLVMSymbolIteratorRef","","",null,null],[6,"LLVMRelocationIteratorRef","","",null,null],[0,"target","llvm_sys","Target information",null,null],[4,"LLVMByteOrdering","llvm_sys::target","",null,null],[13,"LLVMBigEndian","","",23,null],[13,"LLVMLittleEndian","","",23,null],[4,"LLVMOpaqueTargetData","","",null,null],[4,"LLVMOpaqueTargetLibraryInfotData","","",null,null],[5,"LLVMInitializeR600TargetInfo","","",null,null],[5,"LLVMInitializeSystemZTargetInfo","","",null,null],[5,"LLVMInitializeHexagonTargetInfo","","",null,null],[5,"LLVMInitializeNVPTXTargetInfo","","",null,null],[5,"LLVMInitializeCppBackendTargetInfo","","",null,null],[5,"LLVMInitializeMSP430TargetInfo","","",null,null],[5,"LLVMInitializeXCoreTargetInfo","","",null,null],[5,"LLVMInitializeMipsTargetInfo","","",null,null],[5,"LLVMInitializeAArch64TargetInfo","","",null,null],[5,"LLVMInitializeARMTargetInfo","","",null,null],[5,"LLVMInitializePowerPCTargetInfo","","",null,null],[5,"LLVMInitializeSparcTargetInfo","","",null,null],[5,"LLVMInitializeX86TargetInfo","","",null,null],[5,"LLVMInitializeR600Target","","",null,null],[5,"LLVMInitializeSystemZTarget","","",null,null],[5,"LLVMInitializeHexagonTarget","","",null,null],[5,"LLVMInitializeNVPTXTarget","","",null,null],[5,"LLVMInitializeCppBackendTarget","","",null,null],[5,"LLVMInitializeMSP430Target","","",null,null],[5,"LLVMInitializeXCoreTarget","","",null,null],[5,"LLVMInitializeMipsTarget","","",null,null],[5,"LLVMInitializeAArch64Target","","",null,null],[5,"LLVMInitializeARMTarget","","",null,null],[5,"LLVMInitializePowerPCTarget","","",null,null],[5,"LLVMInitializeSparcTarget","","",null,null],[5,"LLVMInitializeX86Target","","",null,null],[5,"LLVMInitializeR600TargetMC","","",null,null],[5,"LLVMInitializeSystemZTargetMC","","",null,null],[5,"LLVMInitializeHexagonTargetMC","","",null,null],[5,"LLVMInitializeNVPTXTargetMC","","",null,null],[5,"LLVMInitializeCppBackendTargetMC","","",null,null],[5,"LLVMInitializeMSP430TargetMC","","",null,null],[5,"LLVMInitializeXCoreTargetMC","","",null,null],[5,"LLVMInitializeMipsTargetMC","","",null,null],[5,"LLVMInitializeAArch64TargetMC","","",null,null],[5,"LLVMInitializeARMTargetMC","","",null,null],[5,"LLVMInitializePowerPCTargetMC","","",null,null],[5,"LLVMInitializeSparcTargetMC","","",null,null],[5,"LLVMInitializeX86TargetMC","","",null,null],[5,"LLVMInitializeR600AsmPrinter","","",null,null],[5,"LLVMInitializeSystemZAsmPrinter","","",null,null],[5,"LLVMInitializeHexagonAsmPrinter","","",null,null],[5,"LLVMInitializeNVPTXAsmPrinter","","",null,null],[5,"LLVMInitializeMSP430AsmPrinter","","",null,null],[5,"LLVMInitializeXCoreAsmPrinter","","",null,null],[5,"LLVMInitializeMipsAsmPrinter","","",null,null],[5,"LLVMInitializeAArch64AsmPrinter","","",null,null],[5,"LLVMInitializeARMAsmPrinter","","",null,null],[5,"LLVMInitializePowerPCAsmPrinter","","",null,null],[5,"LLVMInitializeSparcAsmPrinter","","",null,null],[5,"LLVMInitializeX86AsmPrinter","","",null,null],[5,"LLVMInitializeR600AsmParser","","",null,null],[5,"LLVMInitializeSystemZAsmParser","","",null,null],[5,"LLVMInitializeMipsAsmParser","","",null,null],[5,"LLVMInitializeAArch64AsmParser","","",null,null],[5,"LLVMInitializeARMAsmParser","","",null,null],[5,"LLVMInitializePowerPCAsmParser","","",null,null],[5,"LLVMInitializeSparcAsmParser","","",null,null],[5,"LLVMInitializeX86AsmParser","","",null,null],[5,"LLVMInitializeSystemZDisassembler","","",null,null],[5,"LLVMInitializeHexagonDisassembler","","",null,null],[5,"LLVMInitializeXCoreDisassembler","","",null,null],[5,"LLVMInitializeMipsDisassembler","","",null,null],[5,"LLVMInitializeAArch64Disassembler","","",null,null],[5,"LLVMInitializeARMDisassembler","","",null,null],[5,"LLVMInitializePowerPCDisassembler","","",null,null],[5,"LLVMInitializeSparcDisassembler","","",null,null],[5,"LLVMInitializeX86Disassembler","","",null,null],[5,"LLVMCreateTargetData","","",null,null],[5,"LLVMAddTargetData","","",null,null],[5,"LLVMAddTargetLibraryInfo","","",null,null],[5,"LLVMCopyStringRepOfTargetData","","",null,null],[5,"LLVMByteOrder","","",null,null],[5,"LLVMPointerSize","","",null,null],[5,"LLVMPointerSizeForAS","","",null,null],[5,"LLVMIntPtrType","","",null,null],[5,"LLVMIntPtrTypeForAS","","",null,null],[5,"LLVMIntPtrTypeInContext","","",null,null],[5,"LLVMIntPtrTypeForASInContext","","",null,null],[5,"LLVMSizeOfTypeInBits","","",null,null],[5,"LLVMStoreSizeOfType","","",null,null],[5,"LLVMABISizeOfType","","",null,null],[5,"LLVMABIAlignmentOfType","","",null,null],[5,"LLVMCallFrameAlignmentOfType","","",null,null],[5,"LLVMPreferredAlignmentOfType","","",null,null],[5,"LLVMPreferredAlignmentOfGlobal","","",null,null],[5,"LLVMElementAtOffset","","",null,null],[5,"LLVMOffsetOfElement","","",null,null],[5,"LLVMDisposeTargetData","","",null,null],[5,"LLVM_InitializeAllTargetInfos","","",null,null],[5,"LLVM_InitializeAllTargets","","",null,null],[5,"LLVM_InitializeAllTargetMCs","","",null,null],[5,"LLVM_InitializeAllAsmPrinters","","",null,null],[5,"LLVM_InitializeAllAsmParsers","","",null,null],[5,"LLVM_InitializeAllDisassemblers","","",null,null],[5,"LLVM_InitializeNativeTarget","","Returns 1 on failure.",null,null],[5,"LLVM_InitializeNativeAsmParser","","Returns 1 on failure.",null,null],[5,"LLVM_InitializeNativeAsmPrinter","","Returns 1 on failure.",null,null],[5,"LLVM_InitializeNativeDisassembler","","Returns 1 on failure.",null,null],[6,"LLVMTargetDataRef","","",null,null],[6,"LLVMTargetLibraryInfoRef","","",null,null],[0,"support","llvm_sys","",null,null],[5,"LLVMLoadLibraryPermanently","llvm_sys::support","",null,null],[5,"LLVMParseCommandLineOptions","","",null,null],[0,"target_machine","llvm_sys","Target machine information, to generate assembly or object files.",null,null],[4,"LLVMOpaqueTargetMachine","llvm_sys::target_machine","",null,null],[4,"LLVMTarget","","",null,null],[4,"LLVMCodeGenOptLevel","","",null,null],[13,"LLVMCodeGenLevelNone","","",24,null],[13,"LLVMCodeGenLevelLess","","",24,null],[13,"LLVMCodeGenLevelDefault","","",24,null],[13,"LLVMCodeGenLevelAggressive","","",24,null],[4,"LLVMRelocMode","","",null,null],[13,"LLVMRelocDefault","","",25,null],[13,"LLVMRelocStatic","","",25,null],[13,"LLVMRelocPIC","","",25,null],[13,"LLVMRelocDynamicNoPic","","",25,null],[4,"LLVMCodeModel","","",null,null],[13,"LLVMCodeModelDefault","","",26,null],[13,"LLVMCodeModelJITDefault","","",26,null],[13,"LLVMCodeModelSmall","","",26,null],[13,"LLVMCodeModelKernel","","",26,null],[13,"LLVMCodeModelMedium","","",26,null],[13,"LLVMCodeModelLarge","","",26,null],[4,"LLVMCodeGenFileType","","",null,null],[13,"LLVMAssemblyFile","","",27,null],[13,"LLVMObjectFile","","",27,null],[5,"LLVMGetFirstTarget","","",null,null],[5,"LLVMGetNextTarget","","",null,null],[5,"LLVMGetTargetFromName","","",null,null],[5,"LLVMGetTargetFromTriple","","",null,null],[5,"LLVMGetTargetName","","",null,null],[5,"LLVMGetTargetDescription","","",null,null],[5,"LLVMTargetHasJIT","","",null,null],[5,"LLVMTargetHasTargetMachine","","",null,null],[5,"LLVMTargetHasAsmBackend","","",null,null],[5,"LLVMCreateTargetMachine","","",null,null],[5,"LLVMDisposeTargetMachine","","",null,null],[5,"LLVMGetTargetMachineTarget","","",null,null],[5,"LLVMGetTargetMachineTriple","","",null,null],[5,"LLVMGetTargetMachineCPU","","",null,null],[5,"LLVMGetTargetMachineFeatureString","","",null,null],[5,"LLVMGetTargetMachineData","","",null,null],[5,"LLVMSetTargetMachineAsmVerbosity","","",null,null],[5,"LLVMTargetMachineEmitToFile","","",null,null],[5,"LLVMTargetMachineEmitToMemoryBuffer","","",null,null],[5,"LLVMGetDefaultTargetTriple","","",null,null],[5,"LLVMAddAnalysisPasses","","",null,null],[6,"LLVMTargetMachineRef","","",null,null],[6,"LLVMTargetRef","","",null,null],[11,"clone","","",26,null],[0,"transforms","llvm_sys","",null,null],[0,"ipo","llvm_sys::transforms","Interprocedural transformations of LLVM IR.",null,null],[5,"LLVMAddArgumentPromotionPass","llvm_sys::transforms::ipo","",null,null],[5,"LLVMAddConstantMergePass","","",null,null],[5,"LLVMAddDeadArgEliminationPass","","",null,null],[5,"LLVMAddFunctionAttrsPass","","",null,null],[5,"LLVMAddFunctionInliningPass","","",null,null],[5,"LLVMAddAlwaysInlinerPass","","",null,null],[5,"LLVMAddGlobalDCEPass","","",null,null],[5,"LLVMAddGlobalOptimizerPass","","",null,null],[5,"LLVMAddIPConstantPropagationPass","","",null,null],[5,"LLVMAddPruneEHPass","","",null,null],[5,"LLVMAddIPSCCPPass","","",null,null],[5,"LLVMAddInternalizePass","","",null,null],[5,"LLVMAddStripDeadPrototypesPass","","",null,null],[5,"LLVMAddStripSymbolsPass","","",null,null],[0,"pass_manager_builder","llvm_sys::transforms","",null,null],[4,"LLVMOpaquePassManagerBuilder","llvm_sys::transforms::pass_manager_builder","",null,null],[5,"LLVMPassManagerBuilderCreate","","",null,null],[5,"LLVMPassManagerBuilderDispose","","",null,null],[5,"LLVMPassManagerBuilderSetOptLevel","","",null,null],[5,"LLVMPassManagerBuilderSetSizeLevel","","",null,null],[5,"LLVMPassManagerBuilderSetDisableUnitAtATime","","",null,null],[5,"LLVMPassManagerBuilderSetDisableUnrollLoops","","",null,null],[5,"LLVMPassManagerBuilderSetDisableSimplifyLibCalls","","",null,null],[5,"LLVMPassManagerBuilderUseInlinerWithThreshold","","",null,null],[5,"LLVMPassManagerBuilderPopulateFunctionPassManager","","",null,null],[5,"LLVMPassManagerBuilderPopulateModulePassManager","","",null,null],[5,"LLVMPassManagerBuilderPopulateLTOPassManager","","",null,null],[6,"LLVMPassManagerBuilderRef","","",null,null],[0,"scalar","llvm_sys::transforms","Scalar transformations of LLVM IR.",null,null],[5,"LLVMAddAggressiveDCEPass","llvm_sys::transforms::scalar","",null,null],[5,"LLVMAddAlignmentFromAssumptionsPass","","",null,null],[5,"LLVMAddCFGSimplificationPass","","",null,null],[5,"LLVMAddDeadStoreEliminationPass","","",null,null],[5,"LLVMAddScalarizerPass","","",null,null],[5,"LLVMAddMergedLoadStoreMotionPass","","",null,null],[5,"LLVMAddGVNPass","","",null,null],[5,"LLVMAddIndVarSimplifyPass","","",null,null],[5,"LLVMAddInstructionCombiningPass","","",null,null],[5,"LLVMAddJumpThreadingPass","","",null,null],[5,"LLVMAddLICMPass","","",null,null],[5,"LLVMAddLoopDeletionPass","","",null,null],[5,"LLVMAddLoopIdiomPass","","",null,null],[5,"LLVMAddLoopRotatePass","","",null,null],[5,"LLVMAddLoopRerollPass","","",null,null],[5,"LLVMAddLoopUnrollPass","","",null,null],[5,"LLVMAddLoopUnswitchPass","","",null,null],[5,"LLVMAddMemCpyOptPass","","",null,null],[5,"LLVMAddPartiallyInlineLibCallsPass","","",null,null],[5,"LLVMAddLowerSwitchPass","","",null,null],[5,"LLVMAddPromoteMemoryToRegisterPass","","",null,null],[5,"LLVMAddReassociatePass","","",null,null],[5,"LLVMAddSCCPPass","","",null,null],[5,"LLVMAddScalarReplAggregatesPass","","",null,null],[5,"LLVMAddScalarReplAggregatesPassSSA","","",null,null],[5,"LLVMAddScalarReplAggregatesPassWithThreshold","","",null,null],[5,"LLVMAddSimplifyLibCallsPass","","",null,null],[5,"LLVMAddTailCallEliminationPass","","",null,null],[5,"LLVMAddConstantPropagationPass","","",null,null],[5,"LLVMAddDemoteMemoryToRegisterPass","","",null,null],[5,"LLVMAddVerifierPass","","",null,null],[5,"LLVMAddCorrelatedValuePropagationPass","","",null,null],[5,"LLVMAddEarlyCSEPass","","",null,null],[5,"LLVMAddLowerExpectIntrinsicPass","","",null,null],[5,"LLVMAddTypeBasedAliasAnalysisPass","","",null,null],[5,"LLVMAddScopedNoAliasAAPass","","",null,null],[5,"LLVMAddBasicAliasAnalysisPass","","",null,null],[0,"vectorize","llvm_sys::transforms","Vectorization transformations of LLVM IR.",null,null],[5,"LLVMAddBBVectorizePass","llvm_sys::transforms::vectorize","",null,null],[5,"LLVMAddLoopVectorizePass","","",null,null],[5,"LLVMAddSLPVectorizePass","","",null,null],[6,"LLVMFatalErrorHandler","llvm_sys","",null,null],[6,"LLVMDiagnosticHandler","","",null,null],[6,"LLVMYieldCallback","","",null,null],[17,"LLVMZExtAttribute","","",null,null],[17,"LLVMSExtAttribute","","",null,null],[17,"LLVMNoReturnAttribute","","",null,null],[17,"LLVMInRegAttribute","","",null,null],[17,"LLVMStructRetAttribute","","",null,null],[17,"LLVMNoUnwindAttribute","","",null,null],[17,"LLVMNoAliasAttribute","","",null,null],[17,"LLVMByValAttribute","","",null,null],[17,"LLVMNestAttribute","","",null,null],[17,"LLVMReadNoneAttribute","","",null,null],[17,"LLVMReadOnlyAttribute","","",null,null],[17,"LLVMNoInlineAttribute","","",null,null],[17,"LLVMAlwaysInlineAttribute","","",null,null],[17,"LLVMOptimizeForSizeAttribute","","",null,null],[17,"LLVMStackProtectAttribute","","",null,null],[17,"LLVMStackProtectReqAttribute","","",null,null],[17,"LLVMAlignment","","",null,null],[17,"LLVMNoCaptureAttribute","","",null,null],[17,"LLVMNoRedZoneAttribute","","",null,null],[17,"LLVMNoImplicitFloatAttribute","","",null,null],[17,"LLVMNakedAttribute","","",null,null],[17,"LLVMInlineHintAttribute","","",null,null],[17,"LLVMStackAlignment","","",null,null],[17,"LLVMReturnsTwice","","",null,null],[17,"LLVMUWTable","","",null,null],[17,"LLVMNonLazyBind","","",null,null],[11,"hash","","",28,null],[11,"cmp","","",28,null],[11,"partial_cmp","","",28,null],[11,"lt","","",28,null],[11,"le","","",28,null],[11,"gt","","",28,null],[11,"ge","","",28,null],[11,"clone","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"fmt","","",28,null],[11,"empty","","Returns an empty set of flags.",28,{"inputs":[],"output":{"name":"llvmattribute"}}],[11,"all","","Returns the set containing all flags.",28,{"inputs":[],"output":{"name":"llvmattribute"}}],[11,"bits","","Returns the raw value of the flags currently stored.",28,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",28,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",28,{"inputs":[{"name":"c_int"}],"output":{"name":"llvmattribute"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,null],[11,"is_all","","Returns `true` if all flags are currently set.",28,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",28,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",28,null],[11,"insert","","Inserts the specified flags in-place.",28,null],[11,"remove","","Removes the specified flags in-place.",28,null],[11,"toggle","","Toggles the specified flags in-place.",28,null],[11,"bitor","","Returns the union of the two sets of flags.",28,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",28,null],[11,"bitand","","Returns the intersection between the two sets of flags.",28,null],[11,"sub","","Returns the set difference of the two sets of flags.",28,null],[11,"not","","Returns the complement of this set of flags.",28,null],[11,"from_iter","","",28,{"inputs":[{"name":"t"}],"output":{"name":"llvmattribute"}}]],"paths":[[4,"LLVMOpcode"],[4,"LLVMTypeKind"],[4,"LLVMLinkage"],[4,"LLVMVisibility"],[4,"LLVMDLLStorageClass"],[4,"LLVMCallConv"],[4,"LLVMIntPredicate"],[4,"LLVMRealPredicate"],[4,"LLVMLandingPadClauseTy"],[4,"LLVMThreadLocalMode"],[4,"LLVMAtomicOrdering"],[4,"LLVMAtomicRMWBinOp"],[4,"LLVMDiagnosticSeverity"],[4,"LLVMVerifierFailureAction"],[3,"LLVMOpInfoSymbol1"],[3,"Struct_LLVMOpInfo1"],[3,"LLVMMCJITCompilerOptions"],[4,"llvm_lto_status_t"],[4,"LLVMLinkerMode"],[4,"lto_symbol_attributes"],[4,"lto_debug_model"],[4,"lto_codegen_model"],[4,"lto_codegen_diagnostic_severity_t"],[4,"LLVMByteOrdering"],[4,"LLVMCodeGenOptLevel"],[4,"LLVMRelocMode"],[4,"LLVMCodeModel"],[4,"LLVMCodeGenFileType"],[3,"LLVMAttribute"]]};
searchIndex["memchr"] = {"doc":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface\nto the corresponding functions in `libc`.","items":[[5,"memchr","memchr","A safe interface to `memchr`.",null,null],[5,"memrchr","","A safe interface to `memrchr`.",null,null],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,null],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,null]],"paths":[]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a single thread.",null,null],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"drop","","",0,null],[11,"new","","Creates a new empty `ThreadLocal`.",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",0,null],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist.",0,null],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist. If `create` fails, that error is returned and no element is\nadded.",0,null],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",0,null],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.",0,null],[11,"into_iter","","",0,null],[11,"get_default","","Returns the element for the current thread, or creates a default one if\nit doesn&#39;t exist.",0,null],[11,"fmt","","",0,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"default","","",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"new","","Creates a new empty `CachedThreadLocal`.",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",3,null],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist.",3,null],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist. If `create` fails, that error is returned and no element is\nadded.",3,null],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",3,null],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.",3,null],[11,"into_iter","","",3,null],[11,"get_default","","Returns the element for the current thread, or creates a default one if\nit doesn&#39;t exist.",3,null],[11,"fmt","","",3,null]],"paths":[[3,"ThreadLocal"],[3,"IterMut"],[3,"IntoIter"],[3,"CachedThreadLocal"]]};
searchIndex["thread_id"] = {"doc":"Thread-ID: get a unique ID for the current thread.","items":[[5,"get","thread_id","Returns a number that is unique to the calling thread.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",15,null],[12,"sa_data","","",15,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",16,null],[12,"sin_port","","",16,null],[12,"sin_addr","","",16,null],[12,"sin_zero","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",19,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",20,null],[12,"ai_family","","",20,null],[12,"ai_socktype","","",20,null],[12,"ai_protocol","","",20,null],[12,"ai_addrlen","","",20,null],[12,"ai_addr","","",20,null],[12,"ai_canonname","","",20,null],[12,"ai_next","","",20,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",21,null],[12,"nl_pid","","",21,null],[12,"nl_groups","","",21,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",22,null],[12,"sll_protocol","","",22,null],[12,"sll_ifindex","","",22,null],[12,"sll_hatype","","",22,null],[12,"sll_pkttype","","",22,null],[12,"sll_halen","","",22,null],[12,"sll_addr","","",22,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",23,null],[12,"tm_min","","",23,null],[12,"tm_hour","","",23,null],[12,"tm_mday","","",23,null],[12,"tm_mon","","",23,null],[12,"tm_year","","",23,null],[12,"tm_wday","","",23,null],[12,"tm_yday","","",23,null],[12,"tm_isdst","","",23,null],[12,"tm_gmtoff","","",23,null],[12,"tm_zone","","",23,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",24,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",25,null],[12,"dli_fbase","","",25,null],[12,"dli_sname","","",25,null],[12,"dli_saddr","","",25,null],[3,"epoll_event","","",null,null],[12,"events","","",26,null],[12,"u64","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[12,"domainname","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"dirent","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"dirent64","","",null,null],[12,"d_ino","","",30,null],[12,"d_off","","",30,null],[12,"d_reclen","","",30,null],[12,"d_type","","",30,null],[12,"d_name","","",30,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",31,null],[12,"rlim_max","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_pathv","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_flags","","",32,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",33,null],[12,"ifa_name","","",33,null],[12,"ifa_flags","","",33,null],[12,"ifa_addr","","",33,null],[12,"ifa_netmask","","",33,null],[12,"ifa_ifu","","",33,null],[12,"ifa_data","","",33,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",34,null],[12,"pw_passwd","","",34,null],[12,"pw_uid","","",34,null],[12,"pw_gid","","",34,null],[12,"pw_gecos","","",34,null],[12,"pw_dir","","",34,null],[12,"pw_shell","","",34,null],[3,"spwd","","",null,null],[12,"sp_namp","","",35,null],[12,"sp_pwdp","","",35,null],[12,"sp_lstchg","","",35,null],[12,"sp_min","","",35,null],[12,"sp_max","","",35,null],[12,"sp_warn","","",35,null],[12,"sp_inact","","",35,null],[12,"sp_expire","","",35,null],[12,"sp_flag","","",35,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",36,null],[12,"f_frsize","","",36,null],[12,"f_blocks","","",36,null],[12,"f_bfree","","",36,null],[12,"f_bavail","","",36,null],[12,"f_files","","",36,null],[12,"f_ffree","","",36,null],[12,"f_favail","","",36,null],[12,"f_fsid","","",36,null],[12,"f_flag","","",36,null],[12,"f_namemax","","",36,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",37,null],[12,"dqb_bsoftlimit","","",37,null],[12,"dqb_curspace","","",37,null],[12,"dqb_ihardlimit","","",37,null],[12,"dqb_isoftlimit","","",37,null],[12,"dqb_curinodes","","",37,null],[12,"dqb_btime","","",37,null],[12,"dqb_itime","","",37,null],[12,"dqb_valid","","",37,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",38,null],[12,"ssi_errno","","",38,null],[12,"ssi_code","","",38,null],[12,"ssi_pid","","",38,null],[12,"ssi_uid","","",38,null],[12,"ssi_fd","","",38,null],[12,"ssi_tid","","",38,null],[12,"ssi_band","","",38,null],[12,"ssi_overrun","","",38,null],[12,"ssi_trapno","","",38,null],[12,"ssi_status","","",38,null],[12,"ssi_int","","",38,null],[12,"ssi_ptr","","",38,null],[12,"ssi_utime","","",38,null],[12,"ssi_stime","","",38,null],[12,"ssi_addr","","",38,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",39,null],[12,"mq_maxmsg","","",39,null],[12,"mq_msgsize","","",39,null],[12,"mq_curmsgs","","",39,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",40,null],[12,"if_name","","",40,null],[3,"msginfo","","",null,null],[12,"msgpool","","",41,null],[12,"msgmap","","",41,null],[12,"msgmax","","",41,null],[12,"msgmnb","","",41,null],[12,"msgmni","","",41,null],[12,"msgssz","","",41,null],[12,"msgtql","","",41,null],[12,"msgseg","","",41,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",42,null],[12,"e_exit","","",42,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",43,null],[12,"tv_usec","","",43,null],[3,"utmpx","","",null,null],[12,"ut_type","","",44,null],[12,"ut_pid","","",44,null],[12,"ut_line","","",44,null],[12,"ut_id","","",44,null],[12,"ut_user","","",44,null],[12,"ut_host","","",44,null],[12,"ut_exit","","",44,null],[12,"ut_session","","",44,null],[12,"ut_tv","","",44,null],[12,"ut_addr_v6","","",44,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",45,null],[12,"sa_mask","","",45,null],[12,"sa_flags","","",45,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",46,null],[12,"ss_flags","","",46,null],[12,"ss_size","","",46,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",47,null],[12,"si_errno","","",47,null],[12,"si_code","","",47,null],[12,"_pad","","",47,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",48,null],[12,"gl_pathv","","",48,null],[12,"gl_offs","","",48,null],[12,"gl_flags","","",48,null],[3,"ucred","","",null,null],[12,"pid","","",49,null],[12,"uid","","",49,null],[12,"gid","","",49,null],[3,"statfs","","",null,null],[12,"f_type","","",50,null],[12,"f_bsize","","",50,null],[12,"f_blocks","","",50,null],[12,"f_bfree","","",50,null],[12,"f_bavail","","",50,null],[12,"f_files","","",50,null],[12,"f_ffree","","",50,null],[12,"f_fsid","","",50,null],[12,"f_namelen","","",50,null],[12,"f_frsize","","",50,null],[3,"msghdr","","",null,null],[12,"msg_name","","",51,null],[12,"msg_namelen","","",51,null],[12,"msg_iov","","",51,null],[12,"msg_iovlen","","",51,null],[12,"msg_control","","",51,null],[12,"msg_controllen","","",51,null],[12,"msg_flags","","",51,null],[3,"termios","","",null,null],[12,"c_iflag","","",52,null],[12,"c_oflag","","",52,null],[12,"c_cflag","","",52,null],[12,"c_lflag","","",52,null],[12,"c_line","","",52,null],[12,"c_cc","","",52,null],[12,"c_ispeed","","",52,null],[12,"c_ospeed","","",52,null],[3,"flock","","",null,null],[12,"l_type","","",53,null],[12,"l_whence","","",53,null],[12,"l_start","","",53,null],[12,"l_len","","",53,null],[12,"l_pid","","",53,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",54,null],[12,"loads","","",54,null],[12,"totalram","","",54,null],[12,"freeram","","",54,null],[12,"sharedram","","",54,null],[12,"bufferram","","",54,null],[12,"totalswap","","",54,null],[12,"freeswap","","",54,null],[12,"procs","","",54,null],[12,"pad","","",54,null],[12,"totalhigh","","",54,null],[12,"freehigh","","",54,null],[12,"mem_unit","","",54,null],[12,"_f","","",54,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",55,null],[12,"msg_stime","","",55,null],[12,"msg_rtime","","",55,null],[12,"msg_ctime","","",55,null],[12,"msg_qnum","","",55,null],[12,"msg_qbytes","","",55,null],[12,"msg_lspid","","",55,null],[12,"msg_lrpid","","",55,null],[3,"stat","","",null,null],[12,"st_dev","","",56,null],[12,"st_ino","","",56,null],[12,"st_nlink","","",56,null],[12,"st_mode","","",56,null],[12,"st_uid","","",56,null],[12,"st_gid","","",56,null],[12,"st_rdev","","",56,null],[12,"st_size","","",56,null],[12,"st_blksize","","",56,null],[12,"st_blocks","","",56,null],[12,"st_atime","","",56,null],[12,"st_atime_nsec","","",56,null],[12,"st_mtime","","",56,null],[12,"st_mtime_nsec","","",56,null],[12,"st_ctime","","",56,null],[12,"st_ctime_nsec","","",56,null],[3,"stat64","","",null,null],[12,"st_dev","","",57,null],[12,"st_ino","","",57,null],[12,"st_nlink","","",57,null],[12,"st_mode","","",57,null],[12,"st_uid","","",57,null],[12,"st_gid","","",57,null],[12,"st_rdev","","",57,null],[12,"st_size","","",57,null],[12,"st_blksize","","",57,null],[12,"st_blocks","","",57,null],[12,"st_atime","","",57,null],[12,"st_atime_nsec","","",57,null],[12,"st_mtime","","",57,null],[12,"st_mtime_nsec","","",57,null],[12,"st_ctime","","",57,null],[12,"st_ctime_nsec","","",57,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",58,null],[12,"exponent","","",58,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",59,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",60,null],[12,"swd","","",60,null],[12,"ftw","","",60,null],[12,"fop","","",60,null],[12,"rip","","",60,null],[12,"rdp","","",60,null],[12,"mxcsr","","",60,null],[12,"mxcr_mask","","",60,null],[12,"_st","","",60,null],[12,"_xmm","","",60,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",61,null],[12,"fpregs","","",61,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",62,null],[12,"uc_link","","",62,null],[12,"uc_stack","","",62,null],[12,"uc_mcontext","","",62,null],[12,"uc_sigmask","","",62,null],[3,"ipc_perm","","",null,null],[12,"__key","","",63,null],[12,"uid","","",63,null],[12,"gid","","",63,null],[12,"cuid","","",63,null],[12,"cgid","","",63,null],[12,"mode","","",63,null],[12,"__seq","","",63,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",64,null],[12,"shm_segsz","","",64,null],[12,"shm_atime","","",64,null],[12,"shm_dtime","","",64,null],[12,"shm_ctime","","",64,null],[12,"shm_cpid","","",64,null],[12,"shm_lpid","","",64,null],[12,"shm_nattch","","",64,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",65,null],[11,"clone","","",58,null],[11,"clone","","",59,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",66,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",67,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",68,null],[11,"clone","","",69,null],[11,"clone","","",70,null],[11,"clone","","",71,null],[11,"clone","","",72,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",73,null],[11,"clone","","",39,null],[11,"clone","","",74,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",75,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a regular expression parser and an abstract syntax for\nregular expressions. The abstract syntax is defined by the `Expr` type. The\nconcrete syntax is enumerated in the\n[`regex`](../regex/index.html#syntax)\ncrate documentation.","items":[[3,"Literals","regex_syntax","A set of literal byte strings extracted from a regular expression.",null,null],[3,"Lit","","A single member of a set of literals extracted from a regular expression.",null,null],[3,"CharClass","","A character class.",null,null],[3,"ClassRange","","A single inclusive range in a character class.",null,null],[12,"start","","The start character of the range.",0,null],[12,"end","","The end character of the range.",0,null],[3,"ByteClass","","A byte class for byte ranges only.",null,null],[3,"ByteRange","","A single inclusive range in a byte class.",null,null],[12,"start","","The start byte of the range.",1,null],[12,"end","","The end byte of the range.",1,null],[3,"ExprBuilder","","A builder for configuring regular expression parsing.",null,null],[3,"Error","","A parse error.",null,null],[4,"Expr","","A regular expression abstract syntax tree.",null,null],[13,"Empty","","An empty regex (which never matches any text).",2,null],[13,"Literal","","A sequence of one or more literal characters to be matched.",2,null],[12,"chars","regex_syntax::Expr","The characters.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"LiteralBytes","regex_syntax","A sequence of one or more literal bytes to be matched.",2,null],[12,"bytes","regex_syntax::Expr","The bytes.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"AnyChar","regex_syntax","Match any character.",2,null],[13,"AnyCharNoNL","","Match any character, excluding new line (`0xA`).",2,null],[13,"AnyByte","","Match any byte.",2,null],[13,"AnyByteNoNL","","Match any byte, excluding new line (`0xA`).",2,null],[13,"Class","","A character class.",2,null],[13,"ClassBytes","","A character class with byte ranges only.",2,null],[13,"StartLine","","Match the start of a line or beginning of input.",2,null],[13,"EndLine","","Match the end of a line or end of input.",2,null],[13,"StartText","","Match the beginning of input.",2,null],[13,"EndText","","Match the end of input.",2,null],[13,"WordBoundary","","Match a word boundary (word character on one side and a non-word\ncharacter on the other).",2,null],[13,"NotWordBoundary","","Match a position that is not a word boundary (word or non-word\ncharacters on both sides).",2,null],[13,"WordBoundaryAscii","","Match an ASCII word boundary.",2,null],[13,"NotWordBoundaryAscii","","Match a position that is not an ASCII word boundary.",2,null],[13,"Group","","A group, possibly non-capturing.",2,null],[12,"e","regex_syntax::Expr","The expression inside the group.",2,null],[12,"i","","The capture index (starting at `1`) only for capturing groups.",2,null],[12,"name","","The capture name, only for capturing named groups.",2,null],[13,"Repeat","regex_syntax","A repeat operator (`?`, `*`, `+` or `{m,n}`).",2,null],[12,"e","regex_syntax::Expr","The expression to be repeated. Limited to literals, `.`, classes\nor grouped expressions.",2,null],[12,"r","","The type of repeat operator used.",2,null],[12,"greedy","","Whether the repeat is greedy (match the most) or not (match the\nleast).",2,null],[13,"Concat","regex_syntax","A concatenation of expressions. Must be matched one after the other.",2,null],[13,"Alternate","","An alternation of expressions. Only one must match.",2,null],[4,"Repeater","","The type of a repeat operator expression.",null,null],[13,"ZeroOrOne","","Match zero or one (`?`).",3,null],[13,"ZeroOrMore","","Match zero or more (`*`).",3,null],[13,"OneOrMore","","Match one or more (`+`).",3,null],[13,"Range","","Match for at least `min` and at most `max` (`{m,n}`).",3,null],[12,"min","regex_syntax::Repeater","Lower bound on the number of matches.",3,null],[12,"max","","Optional upper bound on the number of matches.",3,null],[4,"ErrorKind","regex_syntax","The specific type of parse error that can occur.",null,null],[13,"DoubleFlagNegation","","A negation symbol is used twice in flag settings.\ne.g., `(?-i-s)`.",4,null],[13,"DuplicateCaptureName","","The same capture name was used more than once.\ne.g., `(?P&lt;a&gt;.)(?P&lt;a&gt;.)`.",4,null],[13,"EmptyAlternate","","An alternate is empty. e.g., `(|a)`.",4,null],[13,"EmptyCaptureName","","A capture group name is empty. e.g., `(?P&lt;&gt;a)`.",4,null],[13,"EmptyFlagNegation","","A negation symbol was not proceded by any flags. e.g., `(?i-)`.",4,null],[13,"EmptyGroup","","A group is empty. e.g., `()`.",4,null],[13,"InvalidBase10","","An invalid number was used in a counted repetition. e.g., `a{b}`.",4,null],[13,"InvalidBase16","","An invalid hexadecimal number was used in an escape sequence.\ne.g., `\\xAG`.",4,null],[13,"InvalidCaptureName","","An invalid capture name was used. e.g., `(?P&lt;0a&gt;b)`.",4,null],[13,"InvalidClassRange","","An invalid class range was givien. Specifically, when the start of the\nrange is greater than the end. e.g., `[z-a]`.",4,null],[12,"start","regex_syntax::ErrorKind","The first character specified in the range.",4,null],[12,"end","","The second character specified in the range.",4,null],[13,"InvalidClassEscape","regex_syntax","An escape sequence was used in a character class where it is not\nallowed. e.g., `[a-\\pN]` or `[\\A]`.",4,null],[13,"InvalidRepeatRange","","An invalid counted repetition min/max was given. e.g., `a{2,1}`.",4,null],[12,"min","regex_syntax::ErrorKind","The first number specified in the repetition.",4,null],[12,"max","","The second number specified in the repetition.",4,null],[13,"InvalidScalarValue","regex_syntax","An invalid Unicode scalar value was used in a long hexadecimal\nsequence. e.g., `\\x{D800}`.",4,null],[13,"MissingBase10","","An empty counted repetition operator. e.g., `a{}`.",4,null],[13,"RepeaterExpectsExpr","","A repetition operator was not applied to an expression. e.g., `*`.",4,null],[13,"RepeaterUnexpectedExpr","","A repetition operator was applied to an expression that cannot be\nrepeated. e.g., `a+*` or `a|*`.",4,null],[13,"UnclosedCaptureName","","A capture group name that is never closed. e.g., `(?P&lt;a`.",4,null],[13,"UnclosedHex","","An unclosed hexadecimal literal. e.g., `\\x{a`.",4,null],[13,"UnclosedParen","","An unclosed parenthesis. e.g., `(a`.",4,null],[13,"UnclosedRepeat","","An unclosed counted repetition operator. e.g., `a{2`.",4,null],[13,"UnclosedUnicodeName","","An unclosed named Unicode class. e.g., `\\p{Yi`.",4,null],[13,"UnexpectedClassEof","","Saw end of regex before class was closed. e.g., `[a`.",4,null],[13,"UnexpectedEscapeEof","","Saw end of regex before escape sequence was closed. e.g., `\\`.",4,null],[13,"UnexpectedFlagEof","","Saw end of regex before flags were closed. e.g., `(?i`.",4,null],[13,"UnexpectedTwoDigitHexEof","","Saw end of regex before two hexadecimal digits were seen. e.g., `\\xA`.",4,null],[13,"UnopenedParen","","Unopened parenthesis. e.g., `)`.",4,null],[13,"UnrecognizedEscape","","Unrecognized escape sequence. e.g., `\\q`.",4,null],[13,"UnrecognizedFlag","","Unrecognized flag. e.g., `(?a)`.",4,null],[13,"UnrecognizedUnicodeClass","","Unrecognized named Unicode class. e.g., `\\p{Foo}`.",4,null],[13,"StackExhausted","","Indicates that the regex uses too much nesting.",4,null],[13,"FlagNotAllowed","","A disallowed flag was found (e.g., `u`).",4,null],[13,"UnicodeNotAllowed","","A Unicode class was used when the Unicode (`u`) flag was disabled.",4,null],[13,"InvalidUtf8","","InvalidUtf8 indicates that the expression may match non-UTF-8 bytes.\nThis never returned if the parser is permitted to allow expressions\nthat match arbitrary bytes.",4,null],[13,"EmptyClass","","A character class was constructed such that it is empty.\ne.g., `[^\\d\\D]`.",4,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"cmp","","",6,null],[11,"clone","","",6,null],[11,"empty","","Returns a new empty set of literals using default limits.",5,{"inputs":[],"output":{"name":"literals"}}],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",5,null],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",5,null],[11,"limit_class","","Get the character class size limit for this set.",5,null],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",5,null],[11,"literals","","Returns the set of literals as a slice. Its order is unspecified.",5,null],[11,"min_len","","Returns the length of the smallest literal.",5,null],[11,"all_complete","","Returns true if all members in this set are complete.",5,null],[11,"any_complete","","Returns true if any member in this set is complete.",5,null],[11,"contains_empty","","Returns true if this set contains an empty literal.",5,null],[11,"is_empty","","Returns true if this set is empty or if all of its members is empty.",5,null],[11,"to_empty","","Returns a new empty set of literals using this set&#39;s limits.",5,null],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this set.",5,null],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this set.",5,null],[11,"trim_suffix","","Returns a new set of literals with the given number of bytes trimmed\nfrom the suffix of each literal.",5,null],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that are\nguaranteed to be unambiguous.",5,null],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that are\nguaranteed to be unambiguous.",5,null],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",5,null],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",5,null],[11,"union","","Unions this set with another set.",5,null],[11,"cross_product","","Extends this set with another set.",5,null],[11,"cross_add","","Extends each literal in this set with the bytes given.",5,null],[11,"add","","Adds the given literal to this set.",5,null],[11,"add_char_class","","Extends each literal in this set with the character class given.",5,null],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",5,null],[11,"cut","","Cuts every member of this set. When a member is cut, it can never\nbe extended.",5,null],[11,"reverse","","Reverses all members in place.",5,null],[11,"clear","","Clears this set of all members.",5,null],[11,"fmt","","",5,null],[11,"new","","Returns a new complete literal with the bytes given.",6,{"inputs":[{"name":"vec"}],"output":{"name":"lit"}}],[11,"empty","","Returns a new complete empty literal.",6,{"inputs":[],"output":{"name":"lit"}}],[11,"is_cut","","Returns true if this literal was &quot;cut.&quot;",6,null],[11,"cut","","Cuts this literal.",6,null],[11,"eq","","",6,null],[11,"partial_cmp","","",6,null],[11,"fmt","","",6,null],[11,"as_ref","","",6,null],[11,"deref","","",6,null],[11,"deref_mut","","",6,null],[6,"Result","","An alias for computations that can return a `Error`.",null,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"new","","Create a new builder for configuring expression parsing.",9,{"inputs":[],"output":{"name":"exprbuilder"}}],[11,"case_insensitive","","Set the default value for the case insensitive (`i`) flag.",9,null],[11,"multi_line","","Set the default value for the multi-line matching (`m`) flag.",9,null],[11,"dot_matches_new_line","","Set the default value for the any character (`s`) flag.",9,null],[11,"swap_greed","","Set the default value for the greedy swap (`U`) flag.",9,null],[11,"ignore_whitespace","","Set the default value for the ignore whitespace (`x`) flag.",9,null],[11,"unicode","","Set the default value for the Unicode (`u`) flag.",9,null],[11,"allow_bytes","","Whether the parser allows matching arbitrary bytes or not.",9,null],[11,"nest_limit","","Set the nesting limit for regular expression parsing.",9,null],[11,"parse","","Parse a string as a regular expression using the current configuraiton.",9,null],[11,"parse","","Parses a string in a regular expression syntax tree.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"prefixes","","Returns a set of literal prefixes extracted from this expression.",2,null],[11,"suffixes","","Returns a set of literal suffixes extracted from this expression.",2,null],[11,"is_anchored_start","","Returns true if and only if the expression is required to match from\nthe beginning of text.",2,null],[11,"has_anchored_start","","Returns true if and only if the expression has at least one matchable\nsub-expression that must match the beginning of text.",2,null],[11,"is_anchored_end","","Returns true if and only if the expression is required to match at the\nend of the text.",2,null],[11,"has_anchored_end","","Returns true if and only if the expression has at least one matchable\nsub-expression that must match the beginning of text.",2,null],[11,"has_bytes","","Returns true if and only if the expression contains sub-expressions\nthat can match arbitrary bytes.",2,null],[11,"deref","","",7,null],[11,"into_iter","","",7,null],[11,"new","","Create a new class from an existing set of ranges.",7,{"inputs":[{"name":"vec"}],"output":{"name":"charclass"}}],[11,"matches","","Returns true if `c` is matched by this character class.",7,null],[11,"remove","","Removes the given character from the class if it exists.",7,null],[11,"negate","","Negates the character class.",7,null],[11,"case_fold","","Apply case folding to this character class.",7,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"new","","Create a new class from an existing set of ranges.",8,{"inputs":[{"name":"vec"}],"output":{"name":"byteclass"}}],[11,"matches","","Returns true if `b` is matched by this byte class.",8,null],[11,"remove","","Removes the given byte from the class if it exists.",8,null],[11,"negate","","Negates the byte class.",8,null],[11,"case_fold","","Apply case folding to this byte class.",8,null],[11,"deref","","",8,null],[11,"into_iter","","",8,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"fmt","","",2,null],[11,"fmt","","",3,null],[11,"fmt","","",7,null],[11,"fmt","","",0,null],[11,"fmt","","",8,null],[11,"fmt","","",1,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"position","","Returns an approximate *character* offset at which the error occurred.",10,null],[11,"kind","","Returns the type of the regex parse error.",10,null],[11,"description","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",4,null]],"paths":[[3,"ClassRange"],[3,"ByteRange"],[4,"Expr"],[4,"Repeater"],[4,"ErrorKind"],[3,"Literals"],[3,"Lit"],[3,"CharClass"],[3,"ByteClass"],[3,"ExprBuilder"],[3,"Error"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags!","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[14,"lazy_static!","lazy_static","",null,null]],"paths":[]};
searchIndex["utf8_ranges"] = {"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent\nranges of UTF-8 bytes. This is useful for constructing byte based automatons\nthat need to embed UTF-8 decoding.","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",0,null],[12,"end","","End of byte range (inclusive).",0,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",1,null],[13,"Two","","Two successive byte ranges.",1,null],[13,"Three","","Three successive byte ranges.",1,null],[13,"Four","","Four successive byte ranges.",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,null],[11,"len","","Returns the number of byte ranges in this sequence.",1,null],[11,"matches","","Returns true if and only if a prefix of `bytes` matches this sequence\nof byte ranges.",1,null],[11,"fmt","","",1,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"matches","","Returns true if and only if the given byte is in this range.",0,null],[11,"fmt","","",0,null],[11,"new","","Create a new iterator over UTF-8 byte ranges for the scalar value range\ngiven.",2,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"self"}}],[11,"next","","",2,null]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
initSearch(searchIndex);
